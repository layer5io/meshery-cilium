{"kind":"CiliumNetworkPolicy","apiVersion":"cilium.io/v2","display-name":"Cilium Network Policy","format":"JSON","metadata":{},"model":{"name":"cilium","version":"v1.14.0-snapshot.0","display-name":"CILIUM","category":"Orchestration \u0026 Management","sub-category":"Service Mesh"},"schema":"{\n \"description\": \"Spec is the desired Cilium specific rule specification.\",\n \"oneOf\": [\n  {\n   \"properties\": {\n    \"endpointSelector\": {}\n   },\n   \"required\": [\n    \"endpointSelector\"\n   ]\n  },\n  {\n   \"properties\": {\n    \"nodeSelector\": {}\n   },\n   \"required\": [\n    \"nodeSelector\"\n   ]\n  }\n ],\n \"properties\": {\n  \"description\": {\n   \"description\": \"Description is a free form string, it can be used by the creator of the rule to store human readable explanation of the purpose of this rule. Rules cannot be identified by comment.\",\n   \"type\": \"string\"\n  },\n  \"egress\": {\n   \"description\": \"Egress is a list of EgressRule which are enforced at egress. If omitted or empty, this rule does not apply at egress.\",\n   \"items\": {\n    \"description\": \"EgressRule contains all rule types which can be applied at egress, i.e. network traffic that originates inside the endpoint and exits the endpoint selected by the endpointSelector. \\n   - All members of this structure are optional. If omitted or empty, the     member will have no effect on the rule. \\n   - If multiple members of the structure are specified, then all members     must match in order for the rule to take effect. The exception to this     rule is the ToRequires member; the effects of any Requires field in any     rule will apply to all other rules as well. \\n   - ToEndpoints, ToCIDR, ToCIDRSet, ToEntities, ToServices and ToGroups are     mutually exclusive. Only one of these members may be present within an     individual rule.\",\n    \"properties\": {\n     \"auth\": {\n      \"description\": \"Auth is the required authentication type for the allowed traffic, if any.\",\n      \"properties\": {\n       \"type\": {\n        \"description\": \"Type is the required authentication type for the allowed traffic, if any.\",\n        \"enum\": [\n         \"null\"\n        ],\n        \"type\": \"string\"\n       }\n      },\n      \"required\": [\n       \"type\"\n      ],\n      \"type\": \"object\"\n     },\n     \"icmps\": {\n      \"description\": \"ICMPs is a list of ICMP rule identified by type number which the endpoint subject to the rule is allowed to connect to. \\n Example: Any endpoint with the label \\\"app=httpd\\\" is allowed to initiate type 8 ICMP connections.\",\n      \"items\": {\n       \"description\": \"ICMPRule is a list of ICMP fields.\",\n       \"properties\": {\n        \"fields\": {\n         \"description\": \"Fields is a list of ICMP fields.\",\n         \"items\": {\n          \"description\": \"ICMPField is a ICMP field.\",\n          \"properties\": {\n           \"family\": {\n            \"default\": \"IPv4\",\n            \"description\": \"Family is a IP address version. Currently, we support `IPv4` and `IPv6`. `IPv4` is set as default.\",\n            \"enum\": [\n             \"IPv4\",\n             \"IPv6\"\n            ],\n            \"type\": \"string\"\n           },\n           \"type\": {\n            \"description\": \"Type is a ICMP-type. It should be 0-255 (8bit).\",\n            \"maximum\": 255,\n            \"minimum\": 0,\n            \"type\": \"integer\"\n           }\n          },\n          \"required\": [\n           \"type\"\n          ],\n          \"type\": \"object\"\n         },\n         \"type\": \"array\"\n        }\n       },\n       \"type\": \"object\"\n      },\n      \"type\": \"array\"\n     },\n     \"toCIDR\": {\n      \"description\": \"ToCIDR is a list of IP blocks which the endpoint subject to the rule is allowed to initiate connections. Only connections destined for outside of the cluster and not targeting the host will be subject to CIDR rules.  This will match on the destination IP address of outgoing connections. Adding a prefix into ToCIDR or into ToCIDRSet with no ExcludeCIDRs is equivalent. Overlaps are allowed between ToCIDR and ToCIDRSet. \\n Example: Any endpoint with the label \\\"app=database-proxy\\\" is allowed to initiate connections to 10.2.3.0/24\",\n      \"items\": {\n       \"description\": \"CIDR specifies a block of IP addresses. Example: 192.0.2.1/32\",\n       \"pattern\": \"^(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\\\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\\\/([0-9]|[1-2][0-9]|3[0-2])$|^s*((([0-9A-Fa-f]{1,4}:){7}(:|([0-9A-Fa-f]{1,4})))|(([0-9A-Fa-f]{1,4}:){6}:([0-9A-Fa-f]{1,4})?)|(([0-9A-Fa-f]{1,4}:){5}(((:[0-9A-Fa-f]{1,4}){0,1}):([0-9A-Fa-f]{1,4})?))|(([0-9A-Fa-f]{1,4}:){4}(((:[0-9A-Fa-f]{1,4}){0,2}):([0-9A-Fa-f]{1,4})?))|(([0-9A-Fa-f]{1,4}:){3}(((:[0-9A-Fa-f]{1,4}){0,3}):([0-9A-Fa-f]{1,4})?))|(([0-9A-Fa-f]{1,4}:){2}(((:[0-9A-Fa-f]{1,4}){0,4}):([0-9A-Fa-f]{1,4})?))|(([0-9A-Fa-f]{1,4}:){1}(((:[0-9A-Fa-f]{1,4}){0,5}):([0-9A-Fa-f]{1,4})?))|(:(:|((:[0-9A-Fa-f]{1,4}){1,7}))))(%.+)?s*/([0-9]|[1-9][0-9]|1[0-1][0-9]|12[0-8])$\",\n       \"type\": \"string\"\n      },\n      \"type\": \"array\"\n     },\n     \"toCIDRSet\": {\n      \"description\": \"ToCIDRSet is a list of IP blocks which the endpoint subject to the rule is allowed to initiate connections to in addition to connections which are allowed via ToEndpoints, along with a list of subnets contained within their corresponding IP block to which traffic should not be allowed. This will match on the destination IP address of outgoing connections. Adding a prefix into ToCIDR or into ToCIDRSet with no ExcludeCIDRs is equivalent. Overlaps are allowed between ToCIDR and ToCIDRSet. \\n Example: Any endpoint with the label \\\"app=database-proxy\\\" is allowed to initiate connections to 10.2.3.0/24 except from IPs in subnet 10.2.3.0/28.\",\n      \"items\": {\n       \"description\": \"CIDRRule is a rule that specifies a CIDR prefix to/from which outside communication  is allowed, along with an optional list of subnets within that CIDR prefix to/from which outside communication is not allowed.\",\n       \"properties\": {\n        \"cidr\": {\n         \"description\": \"CIDR is a CIDR prefix / IP Block.\",\n         \"pattern\": \"^(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\\\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\\\/([0-9]|[1-2][0-9]|3[0-2])$|^s*((([0-9A-Fa-f]{1,4}:){7}(:|([0-9A-Fa-f]{1,4})))|(([0-9A-Fa-f]{1,4}:){6}:([0-9A-Fa-f]{1,4})?)|(([0-9A-Fa-f]{1,4}:){5}(((:[0-9A-Fa-f]{1,4}){0,1}):([0-9A-Fa-f]{1,4})?))|(([0-9A-Fa-f]{1,4}:){4}(((:[0-9A-Fa-f]{1,4}){0,2}):([0-9A-Fa-f]{1,4})?))|(([0-9A-Fa-f]{1,4}:){3}(((:[0-9A-Fa-f]{1,4}){0,3}):([0-9A-Fa-f]{1,4})?))|(([0-9A-Fa-f]{1,4}:){2}(((:[0-9A-Fa-f]{1,4}){0,4}):([0-9A-Fa-f]{1,4})?))|(([0-9A-Fa-f]{1,4}:){1}(((:[0-9A-Fa-f]{1,4}){0,5}):([0-9A-Fa-f]{1,4})?))|(:(:|((:[0-9A-Fa-f]{1,4}){1,7}))))(%.+)?s*/([0-9]|[1-9][0-9]|1[0-1][0-9]|12[0-8])$\",\n         \"type\": \"string\"\n        },\n        \"except\": {\n         \"description\": \"ExceptCIDRs is a list of IP blocks which the endpoint subject to the rule is not allowed to initiate connections to. These CIDR prefixes should be contained within Cidr. These exceptions are only applied to the Cidr in this CIDRRule, and do not apply to any other CIDR prefixes in any other CIDRRules.\",\n         \"items\": {\n          \"description\": \"CIDR specifies a block of IP addresses. Example: 192.0.2.1/32\",\n          \"pattern\": \"^(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\\\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\\\/([0-9]|[1-2][0-9]|3[0-2])$|^s*((([0-9A-Fa-f]{1,4}:){7}(:|([0-9A-Fa-f]{1,4})))|(([0-9A-Fa-f]{1,4}:){6}:([0-9A-Fa-f]{1,4})?)|(([0-9A-Fa-f]{1,4}:){5}(((:[0-9A-Fa-f]{1,4}){0,1}):([0-9A-Fa-f]{1,4})?))|(([0-9A-Fa-f]{1,4}:){4}(((:[0-9A-Fa-f]{1,4}){0,2}):([0-9A-Fa-f]{1,4})?))|(([0-9A-Fa-f]{1,4}:){3}(((:[0-9A-Fa-f]{1,4}){0,3}):([0-9A-Fa-f]{1,4})?))|(([0-9A-Fa-f]{1,4}:){2}(((:[0-9A-Fa-f]{1,4}){0,4}):([0-9A-Fa-f]{1,4})?))|(([0-9A-Fa-f]{1,4}:){1}(((:[0-9A-Fa-f]{1,4}){0,5}):([0-9A-Fa-f]{1,4})?))|(:(:|((:[0-9A-Fa-f]{1,4}){1,7}))))(%.+)?s*/([0-9]|[1-9][0-9]|1[0-1][0-9]|12[0-8])$\",\n          \"type\": \"string\"\n         },\n         \"type\": \"array\"\n        }\n       },\n       \"required\": [\n        \"cidr\"\n       ],\n       \"type\": \"object\"\n      },\n      \"type\": \"array\"\n     },\n     \"toEndpoints\": {\n      \"description\": \"ToEndpoints is a list of endpoints identified by an EndpointSelector to which the endpoints subject to the rule are allowed to communicate. \\n Example: Any endpoint with the label \\\"role=frontend\\\" can communicate with any endpoint carrying the label \\\"role=backend\\\".\",\n      \"items\": {\n       \"description\": \"EndpointSelector is a wrapper for k8s LabelSelector.\",\n       \"properties\": {\n        \"matchExpressions\": {\n         \"description\": \"matchExpressions is a list of label selector requirements. The requirements are ANDed.\",\n         \"items\": {\n          \"description\": \"A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.\",\n          \"properties\": {\n           \"key\": {\n            \"description\": \"key is the label key that the selector applies to.\",\n            \"type\": \"string\"\n           },\n           \"operator\": {\n            \"description\": \"operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.\",\n            \"enum\": [\n             \"In\",\n             \"NotIn\",\n             \"Exists\",\n             \"DoesNotExist\"\n            ],\n            \"type\": \"string\"\n           },\n           \"values\": {\n            \"description\": \"values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.\",\n            \"items\": {\n             \"type\": \"string\"\n            },\n            \"type\": \"array\"\n           }\n          },\n          \"required\": [\n           \"key\",\n           \"operator\"\n          ],\n          \"type\": \"object\"\n         },\n         \"type\": \"array\"\n        },\n        \"matchLabels\": {\n         \"additionalProperties\": {\n          \"description\": \"MatchLabelsValue represents the value from the MatchLabels {key,value} pair.\",\n          \"maxLength\": 63,\n          \"pattern\": \"^(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])?$\",\n          \"type\": \"string\"\n         },\n         \"description\": \"matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is \\\"key\\\", the operator is \\\"In\\\", and the values array contains only \\\"value\\\". The requirements are ANDed.\",\n         \"type\": \"object\"\n        }\n       },\n       \"type\": \"object\"\n      },\n      \"type\": \"array\"\n     },\n     \"toEntities\": {\n      \"description\": \"ToEntities is a list of special entities to which the endpoint subject to the rule is allowed to initiate connections. Supported entities are `world`, `cluster`,`host`,`remote-node`,`kube-apiserver`, `init`, `health`,`unmanaged` and `all`.\",\n      \"items\": {\n       \"description\": \"Entity specifies the class of receiver/sender endpoints that do not have individual identities.  Entities are used to describe \\\"outside of cluster\\\", \\\"host\\\", etc.\",\n       \"enum\": [\n        \"all\",\n        \"world\",\n        \"cluster\",\n        \"host\",\n        \"init\",\n        \"ingress\",\n        \"unmanaged\",\n        \"remote-node\",\n        \"health\",\n        \"none\",\n        \"kube-apiserver\"\n       ],\n       \"type\": \"string\"\n      },\n      \"type\": \"array\"\n     },\n     \"toFQDNs\": {\n      \"description\": \"ToFQDN allows whitelisting DNS names in place of IPs. The IPs that result from DNS resolution of `ToFQDN.MatchName`s are added to the same EgressRule object as ToCIDRSet entries, and behave accordingly. Any L4 and L7 rules within this EgressRule will also apply to these IPs. The DNS -\\u003e IP mapping is re-resolved periodically from within the cilium-agent, and the IPs in the DNS response are effected in the policy for selected pods as-is (i.e. the list of IPs is not modified in any way). Note: An explicit rule to allow for DNS traffic is needed for the pods, as ToFQDN counts as an egress rule and will enforce egress policy when PolicyEnforcment=default. Note: If the resolved IPs are IPs within the kubernetes cluster, the ToFQDN rule will not apply to that IP. Note: ToFQDN cannot occur in the same policy as other To* rules. \\n The current implementation has a number of limitations: - The DNS resolution originates from cilium-agent, and not from the pods. Differences between the responses seen by cilium agent and a particular pod will whitelist the incorrect IP. - DNS TTLs are ignored, and cilium-agent will repoll on a short interval (5 seconds). Each change to the DNS data will trigger a policy regeneration. This may result in delayed updates to the policy for an endpoint when the data changes often or the system is under load.\",\n      \"items\": {\n       \"properties\": {\n        \"matchName\": {\n         \"description\": \"MatchName matches literal DNS names. A trailing \\\".\\\" is automatically added when missing.\",\n         \"pattern\": \"^([-a-zA-Z0-9_]+[.]?)+$\",\n         \"type\": \"string\"\n        },\n        \"matchPattern\": {\n         \"description\": \"MatchPattern allows using wildcards to match DNS names. All wildcards are case insensitive. The wildcards are: - \\\"*\\\" matches 0 or more DNS valid characters, and may occur anywhere in the pattern. As a special case a \\\"*\\\" as the leftmost character, without a following \\\".\\\" matches all subdomains as well as the name to the right. A trailing \\\".\\\" is automatically added when missing. \\n Examples: `*.cilium.io` matches subomains of cilium at that level   www.cilium.io and blog.cilium.io match, cilium.io and google.com do not `*cilium.io` matches cilium.io and all subdomains ends with \\\"cilium.io\\\"   except those containing \\\".\\\" separator, subcilium.io and sub-cilium.io match,   www.cilium.io and blog.cilium.io does not sub*.cilium.io matches subdomains of cilium where the subdomain component begins with \\\"sub\\\"   sub.cilium.io and subdomain.cilium.io match, www.cilium.io,   blog.cilium.io, cilium.io and google.com do not\",\n         \"pattern\": \"^([-a-zA-Z0-9_*]+[.]?)+$\",\n         \"type\": \"string\"\n        }\n       },\n       \"type\": \"object\"\n      },\n      \"type\": \"array\"\n     },\n     \"toGroups\": {\n      \"description\": \"ToGroups is a directive that allows the integration with multiple outside providers. Currently, only AWS is supported, and the rule can select by multiple sub directives: \\n Example: toGroups: - aws:     securityGroupsIds:     - 'sg-XXXXXXXXXXXXX'\",\n      \"items\": {\n       \"description\": \"ToGroups structure to store all kinds of new integrations that needs a new derivative policy.\",\n       \"properties\": {\n        \"aws\": {\n         \"description\": \"AWSGroup is an structure that can be used to whitelisting information from AWS integration\",\n         \"properties\": {\n          \"labels\": {\n           \"additionalProperties\": {\n            \"type\": \"string\"\n           },\n           \"type\": \"object\"\n          },\n          \"region\": {\n           \"type\": \"string\"\n          },\n          \"securityGroupsIds\": {\n           \"items\": {\n            \"type\": \"string\"\n           },\n           \"type\": \"array\"\n          },\n          \"securityGroupsNames\": {\n           \"items\": {\n            \"type\": \"string\"\n           },\n           \"type\": \"array\"\n          }\n         },\n         \"type\": \"object\"\n        }\n       },\n       \"type\": \"object\"\n      },\n      \"type\": \"array\"\n     },\n     \"toPorts\": {\n      \"description\": \"ToPorts is a list of destination ports identified by port number and protocol which the endpoint subject to the rule is allowed to connect to. \\n Example: Any endpoint with the label \\\"role=frontend\\\" is allowed to initiate connections to destination port 8080/tcp\",\n      \"items\": {\n       \"description\": \"PortRule is a list of ports/protocol combinations with optional Layer 7 rules which must be met.\",\n       \"properties\": {\n        \"listener\": {\n         \"description\": \"listener specifies the name of a custom Envoy listener to which this traffic should be redirected to.\",\n         \"properties\": {\n          \"envoyConfig\": {\n           \"description\": \"EnvoyConfig is a reference to the CEC or CCNP resource in which the listener is defined.\",\n           \"properties\": {\n            \"kind\": {\n             \"description\": \"Kind is the resource type being referred to. Defaults to CiliumEnvoyConfig or CiliumClusterwideEnvoyConfig for CiliumNetworkPolicy and CiliumClusterwideNetworkPolicy, respectively. The only case this is currently explicitly needed is when referring to a CiliumClusterwideEnvoyConfig from CiliumNetworkPolicy, as using a namespaced listener from a cluster scoped policy is not allowed.\",\n             \"enum\": [\n              \"CiliumEnvoyConfig\",\n              \"CiliumClusterwideEnvoyConfig\"\n             ],\n             \"type\": \"string\"\n            },\n            \"name\": {\n             \"description\": \"Name is the resource name of the CiliumEnvoyConfig or CiliumClusterwideEnvoyConfig where the listener is defined in.\",\n             \"minLength\": 1,\n             \"type\": \"string\"\n            }\n           },\n           \"required\": [\n            \"name\"\n           ],\n           \"type\": \"object\"\n          },\n          \"name\": {\n           \"description\": \"Name is the name of the listener.\",\n           \"minLength\": 1,\n           \"type\": \"string\"\n          }\n         },\n         \"required\": [\n          \"envoyConfig\",\n          \"name\"\n         ],\n         \"type\": \"object\"\n        },\n        \"originatingTLS\": {\n         \"description\": \"OriginatingTLS is the TLS context for the connections originated by the L7 proxy.  For egress policy this specifies the client-side TLS parameters for the upstream connection originating from the L7 proxy to the remote destination. For ingress policy this specifies the client-side TLS parameters for the connection from the L7 proxy to the local endpoint.\",\n         \"properties\": {\n          \"certificate\": {\n           \"description\": \"Certificate is the file name or k8s secret item name for the certificate chain. If omitted, 'tls.crt' is assumed, if it exists. If given, the item must exist.\",\n           \"type\": \"string\"\n          },\n          \"privateKey\": {\n           \"description\": \"PrivateKey is the file name or k8s secret item name for the private key matching the certificate chain. If omitted, 'tls.key' is assumed, if it exists. If given, the item must exist.\",\n           \"type\": \"string\"\n          },\n          \"secret\": {\n           \"description\": \"Secret is the secret that contains the certificates and private key for the TLS context. By default, Cilium will search in this secret for the following items:  - 'ca.crt'  - Which represents the trusted CA to verify remote source.  - 'tls.crt' - Which represents the public key certificate.  - 'tls.key' - Which represents the private key matching the public key                certificate.\",\n           \"properties\": {\n            \"name\": {\n             \"description\": \"Name is the name of the secret.\",\n             \"type\": \"string\"\n            },\n            \"namespace\": {\n             \"description\": \"Namespace is the namespace in which the secret exists. Context of use determines the default value if left out (e.g., \\\"default\\\").\",\n             \"type\": \"string\"\n            }\n           },\n           \"required\": [\n            \"name\"\n           ],\n           \"type\": \"object\"\n          },\n          \"trustedCA\": {\n           \"description\": \"TrustedCA is the file name or k8s secret item name for the trusted CA. If omitted, 'ca.crt' is assumed, if it exists. If given, the item must exist.\",\n           \"type\": \"string\"\n          }\n         },\n         \"required\": [\n          \"secret\"\n         ],\n         \"type\": \"object\"\n        },\n        \"ports\": {\n         \"description\": \"Ports is a list of L4 port/protocol\",\n         \"items\": {\n          \"description\": \"PortProtocol specifies an L4 port with an optional transport protocol\",\n          \"properties\": {\n           \"port\": {\n            \"description\": \"Port is an L4 port number. For now the string will be strictly parsed as a single uint16. In the future, this field may support ranges in the form \\\"1024-2048 Port can also be a port name, which must contain at least one [a-z], and may also contain [0-9] and '-' anywhere except adjacent to another '-' or in the beginning or the end.\",\n            \"pattern\": \"^(6553[0-5]|655[0-2][0-9]|65[0-4][0-9]{2}|6[0-4][0-9]{3}|[1-5][0-9]{4}|[0-9]{1,4})|([a-zA-Z0-9]-?)*[a-zA-Z](-?[a-zA-Z0-9])*$\",\n            \"type\": \"string\"\n           },\n           \"protocol\": {\n            \"description\": \"Protocol is the L4 protocol. If omitted or empty, any protocol matches. Accepted values: \\\"TCP\\\", \\\"UDP\\\", \\\"SCTP\\\", \\\"ANY\\\" \\n Matching on ICMP is not supported. \\n Named port specified for a container may narrow this down, but may not contradict this.\",\n            \"enum\": [\n             \"TCP\",\n             \"UDP\",\n             \"SCTP\",\n             \"ANY\"\n            ],\n            \"type\": \"string\"\n           }\n          },\n          \"required\": [\n           \"port\"\n          ],\n          \"type\": \"object\"\n         },\n         \"type\": \"array\"\n        },\n        \"rules\": {\n         \"description\": \"Rules is a list of additional port level rules which must be met in order for the PortRule to allow the traffic. If omitted or empty, no layer 7 rules are enforced.\",\n         \"properties\": {\n          \"dns\": {\n           \"description\": \"DNS-specific rules.\",\n           \"items\": {\n            \"description\": \"PortRuleDNS is a list of allowed DNS lookups.\",\n            \"properties\": {\n             \"matchName\": {\n              \"description\": \"MatchName matches literal DNS names. A trailing \\\".\\\" is automatically added when missing.\",\n              \"pattern\": \"^([-a-zA-Z0-9_]+[.]?)+$\",\n              \"type\": \"string\"\n             },\n             \"matchPattern\": {\n              \"description\": \"MatchPattern allows using wildcards to match DNS names. All wildcards are case insensitive. The wildcards are: - \\\"*\\\" matches 0 or more DNS valid characters, and may occur anywhere in the pattern. As a special case a \\\"*\\\" as the leftmost character, without a following \\\".\\\" matches all subdomains as well as the name to the right. A trailing \\\".\\\" is automatically added when missing. \\n Examples: `*.cilium.io` matches subomains of cilium at that level   www.cilium.io and blog.cilium.io match, cilium.io and google.com do not `*cilium.io` matches cilium.io and all subdomains ends with \\\"cilium.io\\\"   except those containing \\\".\\\" separator, subcilium.io and sub-cilium.io match,   www.cilium.io and blog.cilium.io does not sub*.cilium.io matches subdomains of cilium where the subdomain component begins with \\\"sub\\\"   sub.cilium.io and subdomain.cilium.io match, www.cilium.io,   blog.cilium.io, cilium.io and google.com do not\",\n              \"pattern\": \"^([-a-zA-Z0-9_*]+[.]?)+$\",\n              \"type\": \"string\"\n             }\n            },\n            \"type\": \"object\"\n           },\n           \"type\": \"array\"\n          },\n          \"http\": {\n           \"description\": \"HTTP specific rules.\",\n           \"items\": {\n            \"description\": \"PortRuleHTTP is a list of HTTP protocol constraints. All fields are optional, if all fields are empty or missing, the rule does not have any effect. \\n All fields of this type are extended POSIX regex as defined by IEEE Std 1003.1, (i.e this follows the egrep/unix syntax, not the perl syntax) matched against the path of an incoming request. Currently it can contain characters disallowed from the conventional \\\"path\\\" part of a URL as defined by RFC 3986.\",\n            \"properties\": {\n             \"headerMatches\": {\n              \"description\": \"HeaderMatches is a list of HTTP headers which must be present and match against the given values. Mismatch field can be used to specify what to do when there is no match.\",\n              \"items\": {\n               \"description\": \"HeaderMatch extends the HeaderValue for matching requirement of a named header field against an immediate string, a secret value, or a regex.  If none of the optional fields is present, then the header value is not matched, only presence of the header is enough.\",\n               \"properties\": {\n                \"mismatch\": {\n                 \"description\": \"Mismatch identifies what to do in case there is no match. The default is to drop the request. Otherwise the overall rule is still considered as matching, but the mismatches are logged in the access log.\",\n                 \"enum\": [\n                  \"LOG\",\n                  \"ADD\",\n                  \"DELETE\",\n                  \"REPLACE\"\n                 ],\n                 \"type\": \"string\"\n                },\n                \"name\": {\n                 \"description\": \"Name identifies the header.\",\n                 \"type\": \"string\"\n                },\n                \"secret\": {\n                 \"description\": \"Secret refers to a secret that contains the value to be matched against. The secret must only contain one entry. If the referred secret does not exist, and there is no \\\"Value\\\" specified, the match will fail.\",\n                 \"properties\": {\n                  \"name\": {\n                   \"description\": \"Name is the name of the secret.\",\n                   \"type\": \"string\"\n                  },\n                  \"namespace\": {\n                   \"description\": \"Namespace is the namespace in which the secret exists. Context of use determines the default value if left out (e.g., \\\"default\\\").\",\n                   \"type\": \"string\"\n                  }\n                 },\n                 \"required\": [\n                  \"name\"\n                 ],\n                 \"type\": \"object\"\n                },\n                \"value\": {\n                 \"description\": \"Value matches the exact value of the header. Can be specified either alone or together with \\\"Secret\\\"; will be used as the header value if the secret can not be found in the latter case.\",\n                 \"type\": \"string\"\n                }\n               },\n               \"required\": [\n                \"name\"\n               ],\n               \"type\": \"object\"\n              },\n              \"type\": \"array\"\n             },\n             \"headers\": {\n              \"description\": \"Headers is a list of HTTP headers which must be present in the request. If omitted or empty, requests are allowed regardless of headers present.\",\n              \"items\": {\n               \"type\": \"string\"\n              },\n              \"type\": \"array\"\n             },\n             \"host\": {\n              \"description\": \"Host is an extended POSIX regex matched against the host header of a request, e.g. \\\"foo.com\\\" \\n If omitted or empty, the value of the host header is ignored.\",\n              \"format\": \"idn-hostname\",\n              \"type\": \"string\"\n             },\n             \"method\": {\n              \"description\": \"Method is an extended POSIX regex matched against the method of a request, e.g. \\\"GET\\\", \\\"POST\\\", \\\"PUT\\\", \\\"PATCH\\\", \\\"DELETE\\\", ... \\n If omitted or empty, all methods are allowed.\",\n              \"type\": \"string\"\n             },\n             \"path\": {\n              \"description\": \"Path is an extended POSIX regex matched against the path of a request. Currently it can contain characters disallowed from the conventional \\\"path\\\" part of a URL as defined by RFC 3986. \\n If omitted or empty, all paths are all allowed.\",\n              \"type\": \"string\"\n             }\n            },\n            \"type\": \"object\"\n           },\n           \"type\": \"array\"\n          },\n          \"kafka\": {\n           \"description\": \"Kafka-specific rules.\",\n           \"items\": {\n            \"description\": \"PortRule is a list of Kafka protocol constraints. All fields are optional, if all fields are empty or missing, the rule will match all Kafka messages.\",\n            \"properties\": {\n             \"apiKey\": {\n              \"description\": \"APIKey is a case-insensitive string matched against the key of a request, e.g. \\\"produce\\\", \\\"fetch\\\", \\\"createtopic\\\", \\\"deletetopic\\\", et al Reference: https://kafka.apache.org/protocol#protocol_api_keys \\n If omitted or empty, and if Role is not specified, then all keys are allowed.\",\n              \"type\": \"string\"\n             },\n             \"apiVersion\": {\n              \"description\": \"APIVersion is the version matched against the api version of the Kafka message. If set, it has to be a string representing a positive integer. \\n If omitted or empty, all versions are allowed.\",\n              \"type\": \"string\"\n             },\n             \"clientID\": {\n              \"description\": \"ClientID is the client identifier as provided in the request. \\n From Kafka protocol documentation: This is a user supplied identifier for the client application. The user can use any identifier they like and it will be used when logging errors, monitoring aggregates, etc. For example, one might want to monitor not just the requests per second overall, but the number coming from each client application (each of which could reside on multiple servers). This id acts as a logical grouping across all requests from a particular client. \\n If omitted or empty, all client identifiers are allowed.\",\n              \"type\": \"string\"\n             },\n             \"role\": {\n              \"description\": \"Role is a case-insensitive string and describes a group of API keys necessary to perform certain higher-level Kafka operations such as \\\"produce\\\" or \\\"consume\\\". A Role automatically expands into all APIKeys required to perform the specified higher-level operation. \\n The following values are supported:  - \\\"produce\\\": Allow producing to the topics specified in the rule  - \\\"consume\\\": Allow consuming from the topics specified in the rule \\n This field is incompatible with the APIKey field, i.e APIKey and Role cannot both be specified in the same rule. \\n If omitted or empty, and if APIKey is not specified, then all keys are allowed.\",\n              \"enum\": [\n               \"produce\",\n               \"consume\"\n              ],\n              \"type\": \"string\"\n             },\n             \"topic\": {\n              \"description\": \"Topic is the topic name contained in the message. If a Kafka request contains multiple topics, then all topics must be allowed or the message will be rejected. \\n This constraint is ignored if the matched request message type doesn't contain any topic. Maximum size of Topic can be 249 characters as per recent Kafka spec and allowed characters are a-z, A-Z, 0-9, -, . and _. \\n Older Kafka versions had longer topic lengths of 255, but in Kafka 0.10 version the length was changed from 255 to 249. For compatibility reasons we are using 255. \\n If omitted or empty, all topics are allowed.\",\n              \"maxLength\": 255,\n              \"type\": \"string\"\n             }\n            },\n            \"type\": \"object\"\n           },\n           \"type\": \"array\"\n          },\n          \"l7\": {\n           \"description\": \"Key-value pair rules.\",\n           \"items\": {\n            \"additionalProperties\": {\n             \"type\": \"string\"\n            },\n            \"description\": \"PortRuleL7 is a list of key-value pairs interpreted by a L7 protocol as protocol constraints. All fields are optional, if all fields are empty or missing, the rule does not have any effect.\",\n            \"type\": \"object\"\n           },\n           \"type\": \"array\"\n          },\n          \"l7proto\": {\n           \"description\": \"Name of the L7 protocol for which the Key-value pair rules apply.\",\n           \"type\": \"string\"\n          }\n         },\n         \"type\": \"object\"\n        },\n        \"serverNames\": {\n         \"description\": \"ServerNames is a list of allowed TLS SNI values. If not empty, then TLS must be present and one of the provided SNIs must be indicated in the TLS handshake.\",\n         \"items\": {\n          \"type\": \"string\"\n         },\n         \"type\": \"array\"\n        },\n        \"terminatingTLS\": {\n         \"description\": \"TerminatingTLS is the TLS context for the connection terminated by the L7 proxy.  For egress policy this specifies the server-side TLS parameters to be applied on the connections originated from the local endpoint and terminated by the L7 proxy. For ingress policy this specifies the server-side TLS parameters to be applied on the connections originated from a remote source and terminated by the L7 proxy.\",\n         \"properties\": {\n          \"certificate\": {\n           \"description\": \"Certificate is the file name or k8s secret item name for the certificate chain. If omitted, 'tls.crt' is assumed, if it exists. If given, the item must exist.\",\n           \"type\": \"string\"\n          },\n          \"privateKey\": {\n           \"description\": \"PrivateKey is the file name or k8s secret item name for the private key matching the certificate chain. If omitted, 'tls.key' is assumed, if it exists. If given, the item must exist.\",\n           \"type\": \"string\"\n          },\n          \"secret\": {\n           \"description\": \"Secret is the secret that contains the certificates and private key for the TLS context. By default, Cilium will search in this secret for the following items:  - 'ca.crt'  - Which represents the trusted CA to verify remote source.  - 'tls.crt' - Which represents the public key certificate.  - 'tls.key' - Which represents the private key matching the public key                certificate.\",\n           \"properties\": {\n            \"name\": {\n             \"description\": \"Name is the name of the secret.\",\n             \"type\": \"string\"\n            },\n            \"namespace\": {\n             \"description\": \"Namespace is the namespace in which the secret exists. Context of use determines the default value if left out (e.g., \\\"default\\\").\",\n             \"type\": \"string\"\n            }\n           },\n           \"required\": [\n            \"name\"\n           ],\n           \"type\": \"object\"\n          },\n          \"trustedCA\": {\n           \"description\": \"TrustedCA is the file name or k8s secret item name for the trusted CA. If omitted, 'ca.crt' is assumed, if it exists. If given, the item must exist.\",\n           \"type\": \"string\"\n          }\n         },\n         \"required\": [\n          \"secret\"\n         ],\n         \"type\": \"object\"\n        }\n       },\n       \"type\": \"object\"\n      },\n      \"type\": \"array\"\n     },\n     \"toRequires\": {\n      \"description\": \"ToRequires is a list of additional constraints which must be met in order for the selected endpoints to be able to connect to other endpoints. These additional constraints do no by itself grant access privileges and must always be accompanied with at least one matching ToEndpoints. \\n Example: Any Endpoint with the label \\\"team=A\\\" requires any endpoint to which it communicates to also carry the label \\\"team=A\\\".\",\n      \"items\": {\n       \"description\": \"EndpointSelector is a wrapper for k8s LabelSelector.\",\n       \"properties\": {\n        \"matchExpressions\": {\n         \"description\": \"matchExpressions is a list of label selector requirements. The requirements are ANDed.\",\n         \"items\": {\n          \"description\": \"A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.\",\n          \"properties\": {\n           \"key\": {\n            \"description\": \"key is the label key that the selector applies to.\",\n            \"type\": \"string\"\n           },\n           \"operator\": {\n            \"description\": \"operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.\",\n            \"enum\": [\n             \"In\",\n             \"NotIn\",\n             \"Exists\",\n             \"DoesNotExist\"\n            ],\n            \"type\": \"string\"\n           },\n           \"values\": {\n            \"description\": \"values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.\",\n            \"items\": {\n             \"type\": \"string\"\n            },\n            \"type\": \"array\"\n           }\n          },\n          \"required\": [\n           \"key\",\n           \"operator\"\n          ],\n          \"type\": \"object\"\n         },\n         \"type\": \"array\"\n        },\n        \"matchLabels\": {\n         \"additionalProperties\": {\n          \"description\": \"MatchLabelsValue represents the value from the MatchLabels {key,value} pair.\",\n          \"maxLength\": 63,\n          \"pattern\": \"^(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])?$\",\n          \"type\": \"string\"\n         },\n         \"description\": \"matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is \\\"key\\\", the operator is \\\"In\\\", and the values array contains only \\\"value\\\". The requirements are ANDed.\",\n         \"type\": \"object\"\n        }\n       },\n       \"type\": \"object\"\n      },\n      \"type\": \"array\"\n     },\n     \"toServices\": {\n      \"description\": \"ToServices is a list of services to which the endpoint subject to the rule is allowed to initiate connections. Currently Cilium only supports toServices for K8s services without selectors. \\n Example: Any endpoint with the label \\\"app=backend-app\\\" is allowed to initiate connections to all cidrs backing the \\\"external-service\\\" service\",\n      \"items\": {\n       \"description\": \"Service wraps around selectors for services\",\n       \"properties\": {\n        \"k8sService\": {\n         \"description\": \"K8sService selects service by name and namespace pair\",\n         \"properties\": {\n          \"namespace\": {\n           \"type\": \"string\"\n          },\n          \"serviceName\": {\n           \"type\": \"string\"\n          }\n         },\n         \"type\": \"object\"\n        },\n        \"k8sServiceSelector\": {\n         \"description\": \"K8sServiceSelector selects services by k8s labels and namespace\",\n         \"properties\": {\n          \"namespace\": {\n           \"type\": \"string\"\n          },\n          \"selector\": {\n           \"description\": \"ServiceSelector is a label selector for k8s services\",\n           \"properties\": {\n            \"matchExpressions\": {\n             \"description\": \"matchExpressions is a list of label selector requirements. The requirements are ANDed.\",\n             \"items\": {\n              \"description\": \"A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.\",\n              \"properties\": {\n               \"key\": {\n                \"description\": \"key is the label key that the selector applies to.\",\n                \"type\": \"string\"\n               },\n               \"operator\": {\n                \"description\": \"operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.\",\n                \"enum\": [\n                 \"In\",\n                 \"NotIn\",\n                 \"Exists\",\n                 \"DoesNotExist\"\n                ],\n                \"type\": \"string\"\n               },\n               \"values\": {\n                \"description\": \"values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.\",\n                \"items\": {\n                 \"type\": \"string\"\n                },\n                \"type\": \"array\"\n               }\n              },\n              \"required\": [\n               \"key\",\n               \"operator\"\n              ],\n              \"type\": \"object\"\n             },\n             \"type\": \"array\"\n            },\n            \"matchLabels\": {\n             \"additionalProperties\": {\n              \"description\": \"MatchLabelsValue represents the value from the MatchLabels {key,value} pair.\",\n              \"maxLength\": 63,\n              \"pattern\": \"^(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])?$\",\n              \"type\": \"string\"\n             },\n             \"description\": \"matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is \\\"key\\\", the operator is \\\"In\\\", and the values array contains only \\\"value\\\". The requirements are ANDed.\",\n             \"type\": \"object\"\n            }\n           },\n           \"type\": \"object\"\n          }\n         },\n         \"required\": [\n          \"selector\"\n         ],\n         \"type\": \"object\"\n        }\n       },\n       \"type\": \"object\"\n      },\n      \"type\": \"array\"\n     }\n    },\n    \"type\": \"object\"\n   },\n   \"type\": \"array\"\n  },\n  \"egressDeny\": {\n   \"description\": \"EgressDeny is a list of EgressDenyRule which are enforced at egress. Any rule inserted here will by denied regardless of the allowed egress rules in the 'egress' field. If omitted or empty, this rule does not apply at egress.\",\n   \"items\": {\n    \"description\": \"EgressDenyRule contains all rule types which can be applied at egress, i.e. network traffic that originates inside the endpoint and exits the endpoint selected by the endpointSelector. \\n   - All members of this structure are optional. If omitted or empty, the     member will have no effect on the rule. \\n   - If multiple members of the structure are specified, then all members     must match in order for the rule to take effect. The exception to this     rule is the ToRequires member; the effects of any Requires field in any     rule will apply to all other rules as well. \\n   - ToEndpoints, ToCIDR, ToCIDRSet, ToEntities, ToServices and ToGroups are     mutually exclusive. Only one of these members may be present within an     individual rule.\",\n    \"properties\": {\n     \"icmps\": {\n      \"description\": \"ICMPs is a list of ICMP rule identified by type number which the endpoint subject to the rule is not allowed to connect to. \\n Example: Any endpoint with the label \\\"app=httpd\\\" is not allowed to initiate type 8 ICMP connections.\",\n      \"items\": {\n       \"description\": \"ICMPRule is a list of ICMP fields.\",\n       \"properties\": {\n        \"fields\": {\n         \"description\": \"Fields is a list of ICMP fields.\",\n         \"items\": {\n          \"description\": \"ICMPField is a ICMP field.\",\n          \"properties\": {\n           \"family\": {\n            \"default\": \"IPv4\",\n            \"description\": \"Family is a IP address version. Currently, we support `IPv4` and `IPv6`. `IPv4` is set as default.\",\n            \"enum\": [\n             \"IPv4\",\n             \"IPv6\"\n            ],\n            \"type\": \"string\"\n           },\n           \"type\": {\n            \"description\": \"Type is a ICMP-type. It should be 0-255 (8bit).\",\n            \"maximum\": 255,\n            \"minimum\": 0,\n            \"type\": \"integer\"\n           }\n          },\n          \"required\": [\n           \"type\"\n          ],\n          \"type\": \"object\"\n         },\n         \"type\": \"array\"\n        }\n       },\n       \"type\": \"object\"\n      },\n      \"type\": \"array\"\n     },\n     \"toCIDR\": {\n      \"description\": \"ToCIDR is a list of IP blocks which the endpoint subject to the rule is allowed to initiate connections. Only connections destined for outside of the cluster and not targeting the host will be subject to CIDR rules.  This will match on the destination IP address of outgoing connections. Adding a prefix into ToCIDR or into ToCIDRSet with no ExcludeCIDRs is equivalent. Overlaps are allowed between ToCIDR and ToCIDRSet. \\n Example: Any endpoint with the label \\\"app=database-proxy\\\" is allowed to initiate connections to 10.2.3.0/24\",\n      \"items\": {\n       \"description\": \"CIDR specifies a block of IP addresses. Example: 192.0.2.1/32\",\n       \"pattern\": \"^(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\\\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\\\/([0-9]|[1-2][0-9]|3[0-2])$|^s*((([0-9A-Fa-f]{1,4}:){7}(:|([0-9A-Fa-f]{1,4})))|(([0-9A-Fa-f]{1,4}:){6}:([0-9A-Fa-f]{1,4})?)|(([0-9A-Fa-f]{1,4}:){5}(((:[0-9A-Fa-f]{1,4}){0,1}):([0-9A-Fa-f]{1,4})?))|(([0-9A-Fa-f]{1,4}:){4}(((:[0-9A-Fa-f]{1,4}){0,2}):([0-9A-Fa-f]{1,4})?))|(([0-9A-Fa-f]{1,4}:){3}(((:[0-9A-Fa-f]{1,4}){0,3}):([0-9A-Fa-f]{1,4})?))|(([0-9A-Fa-f]{1,4}:){2}(((:[0-9A-Fa-f]{1,4}){0,4}):([0-9A-Fa-f]{1,4})?))|(([0-9A-Fa-f]{1,4}:){1}(((:[0-9A-Fa-f]{1,4}){0,5}):([0-9A-Fa-f]{1,4})?))|(:(:|((:[0-9A-Fa-f]{1,4}){1,7}))))(%.+)?s*/([0-9]|[1-9][0-9]|1[0-1][0-9]|12[0-8])$\",\n       \"type\": \"string\"\n      },\n      \"type\": \"array\"\n     },\n     \"toCIDRSet\": {\n      \"description\": \"ToCIDRSet is a list of IP blocks which the endpoint subject to the rule is allowed to initiate connections to in addition to connections which are allowed via ToEndpoints, along with a list of subnets contained within their corresponding IP block to which traffic should not be allowed. This will match on the destination IP address of outgoing connections. Adding a prefix into ToCIDR or into ToCIDRSet with no ExcludeCIDRs is equivalent. Overlaps are allowed between ToCIDR and ToCIDRSet. \\n Example: Any endpoint with the label \\\"app=database-proxy\\\" is allowed to initiate connections to 10.2.3.0/24 except from IPs in subnet 10.2.3.0/28.\",\n      \"items\": {\n       \"description\": \"CIDRRule is a rule that specifies a CIDR prefix to/from which outside communication  is allowed, along with an optional list of subnets within that CIDR prefix to/from which outside communication is not allowed.\",\n       \"properties\": {\n        \"cidr\": {\n         \"description\": \"CIDR is a CIDR prefix / IP Block.\",\n         \"pattern\": \"^(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\\\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\\\/([0-9]|[1-2][0-9]|3[0-2])$|^s*((([0-9A-Fa-f]{1,4}:){7}(:|([0-9A-Fa-f]{1,4})))|(([0-9A-Fa-f]{1,4}:){6}:([0-9A-Fa-f]{1,4})?)|(([0-9A-Fa-f]{1,4}:){5}(((:[0-9A-Fa-f]{1,4}){0,1}):([0-9A-Fa-f]{1,4})?))|(([0-9A-Fa-f]{1,4}:){4}(((:[0-9A-Fa-f]{1,4}){0,2}):([0-9A-Fa-f]{1,4})?))|(([0-9A-Fa-f]{1,4}:){3}(((:[0-9A-Fa-f]{1,4}){0,3}):([0-9A-Fa-f]{1,4})?))|(([0-9A-Fa-f]{1,4}:){2}(((:[0-9A-Fa-f]{1,4}){0,4}):([0-9A-Fa-f]{1,4})?))|(([0-9A-Fa-f]{1,4}:){1}(((:[0-9A-Fa-f]{1,4}){0,5}):([0-9A-Fa-f]{1,4})?))|(:(:|((:[0-9A-Fa-f]{1,4}){1,7}))))(%.+)?s*/([0-9]|[1-9][0-9]|1[0-1][0-9]|12[0-8])$\",\n         \"type\": \"string\"\n        },\n        \"except\": {\n         \"description\": \"ExceptCIDRs is a list of IP blocks which the endpoint subject to the rule is not allowed to initiate connections to. These CIDR prefixes should be contained within Cidr. These exceptions are only applied to the Cidr in this CIDRRule, and do not apply to any other CIDR prefixes in any other CIDRRules.\",\n         \"items\": {\n          \"description\": \"CIDR specifies a block of IP addresses. Example: 192.0.2.1/32\",\n          \"pattern\": \"^(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\\\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\\\/([0-9]|[1-2][0-9]|3[0-2])$|^s*((([0-9A-Fa-f]{1,4}:){7}(:|([0-9A-Fa-f]{1,4})))|(([0-9A-Fa-f]{1,4}:){6}:([0-9A-Fa-f]{1,4})?)|(([0-9A-Fa-f]{1,4}:){5}(((:[0-9A-Fa-f]{1,4}){0,1}):([0-9A-Fa-f]{1,4})?))|(([0-9A-Fa-f]{1,4}:){4}(((:[0-9A-Fa-f]{1,4}){0,2}):([0-9A-Fa-f]{1,4})?))|(([0-9A-Fa-f]{1,4}:){3}(((:[0-9A-Fa-f]{1,4}){0,3}):([0-9A-Fa-f]{1,4})?))|(([0-9A-Fa-f]{1,4}:){2}(((:[0-9A-Fa-f]{1,4}){0,4}):([0-9A-Fa-f]{1,4})?))|(([0-9A-Fa-f]{1,4}:){1}(((:[0-9A-Fa-f]{1,4}){0,5}):([0-9A-Fa-f]{1,4})?))|(:(:|((:[0-9A-Fa-f]{1,4}){1,7}))))(%.+)?s*/([0-9]|[1-9][0-9]|1[0-1][0-9]|12[0-8])$\",\n          \"type\": \"string\"\n         },\n         \"type\": \"array\"\n        }\n       },\n       \"required\": [\n        \"cidr\"\n       ],\n       \"type\": \"object\"\n      },\n      \"type\": \"array\"\n     },\n     \"toEndpoints\": {\n      \"description\": \"ToEndpoints is a list of endpoints identified by an EndpointSelector to which the endpoints subject to the rule are allowed to communicate. \\n Example: Any endpoint with the label \\\"role=frontend\\\" can communicate with any endpoint carrying the label \\\"role=backend\\\".\",\n      \"items\": {\n       \"description\": \"EndpointSelector is a wrapper for k8s LabelSelector.\",\n       \"properties\": {\n        \"matchExpressions\": {\n         \"description\": \"matchExpressions is a list of label selector requirements. The requirements are ANDed.\",\n         \"items\": {\n          \"description\": \"A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.\",\n          \"properties\": {\n           \"key\": {\n            \"description\": \"key is the label key that the selector applies to.\",\n            \"type\": \"string\"\n           },\n           \"operator\": {\n            \"description\": \"operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.\",\n            \"enum\": [\n             \"In\",\n             \"NotIn\",\n             \"Exists\",\n             \"DoesNotExist\"\n            ],\n            \"type\": \"string\"\n           },\n           \"values\": {\n            \"description\": \"values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.\",\n            \"items\": {\n             \"type\": \"string\"\n            },\n            \"type\": \"array\"\n           }\n          },\n          \"required\": [\n           \"key\",\n           \"operator\"\n          ],\n          \"type\": \"object\"\n         },\n         \"type\": \"array\"\n        },\n        \"matchLabels\": {\n         \"additionalProperties\": {\n          \"description\": \"MatchLabelsValue represents the value from the MatchLabels {key,value} pair.\",\n          \"maxLength\": 63,\n          \"pattern\": \"^(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])?$\",\n          \"type\": \"string\"\n         },\n         \"description\": \"matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is \\\"key\\\", the operator is \\\"In\\\", and the values array contains only \\\"value\\\". The requirements are ANDed.\",\n         \"type\": \"object\"\n        }\n       },\n       \"type\": \"object\"\n      },\n      \"type\": \"array\"\n     },\n     \"toEntities\": {\n      \"description\": \"ToEntities is a list of special entities to which the endpoint subject to the rule is allowed to initiate connections. Supported entities are `world`, `cluster`,`host`,`remote-node`,`kube-apiserver`, `init`, `health`,`unmanaged` and `all`.\",\n      \"items\": {\n       \"description\": \"Entity specifies the class of receiver/sender endpoints that do not have individual identities.  Entities are used to describe \\\"outside of cluster\\\", \\\"host\\\", etc.\",\n       \"enum\": [\n        \"all\",\n        \"world\",\n        \"cluster\",\n        \"host\",\n        \"init\",\n        \"ingress\",\n        \"unmanaged\",\n        \"remote-node\",\n        \"health\",\n        \"none\",\n        \"kube-apiserver\"\n       ],\n       \"type\": \"string\"\n      },\n      \"type\": \"array\"\n     },\n     \"toGroups\": {\n      \"description\": \"ToGroups is a directive that allows the integration with multiple outside providers. Currently, only AWS is supported, and the rule can select by multiple sub directives: \\n Example: toGroups: - aws:     securityGroupsIds:     - 'sg-XXXXXXXXXXXXX'\",\n      \"items\": {\n       \"description\": \"ToGroups structure to store all kinds of new integrations that needs a new derivative policy.\",\n       \"properties\": {\n        \"aws\": {\n         \"description\": \"AWSGroup is an structure that can be used to whitelisting information from AWS integration\",\n         \"properties\": {\n          \"labels\": {\n           \"additionalProperties\": {\n            \"type\": \"string\"\n           },\n           \"type\": \"object\"\n          },\n          \"region\": {\n           \"type\": \"string\"\n          },\n          \"securityGroupsIds\": {\n           \"items\": {\n            \"type\": \"string\"\n           },\n           \"type\": \"array\"\n          },\n          \"securityGroupsNames\": {\n           \"items\": {\n            \"type\": \"string\"\n           },\n           \"type\": \"array\"\n          }\n         },\n         \"type\": \"object\"\n        }\n       },\n       \"type\": \"object\"\n      },\n      \"type\": \"array\"\n     },\n     \"toPorts\": {\n      \"description\": \"ToPorts is a list of destination ports identified by port number and protocol which the endpoint subject to the rule is not allowed to connect to. \\n Example: Any endpoint with the label \\\"role=frontend\\\" is not allowed to initiate connections to destination port 8080/tcp\",\n      \"items\": {\n       \"description\": \"PortDenyRule is a list of ports/protocol that should be used for deny policies. This structure lacks the L7Rules since it's not supported in deny policies.\",\n       \"properties\": {\n        \"ports\": {\n         \"description\": \"Ports is a list of L4 port/protocol\",\n         \"items\": {\n          \"description\": \"PortProtocol specifies an L4 port with an optional transport protocol\",\n          \"properties\": {\n           \"port\": {\n            \"description\": \"Port is an L4 port number. For now the string will be strictly parsed as a single uint16. In the future, this field may support ranges in the form \\\"1024-2048 Port can also be a port name, which must contain at least one [a-z], and may also contain [0-9] and '-' anywhere except adjacent to another '-' or in the beginning or the end.\",\n            \"pattern\": \"^(6553[0-5]|655[0-2][0-9]|65[0-4][0-9]{2}|6[0-4][0-9]{3}|[1-5][0-9]{4}|[0-9]{1,4})|([a-zA-Z0-9]-?)*[a-zA-Z](-?[a-zA-Z0-9])*$\",\n            \"type\": \"string\"\n           },\n           \"protocol\": {\n            \"description\": \"Protocol is the L4 protocol. If omitted or empty, any protocol matches. Accepted values: \\\"TCP\\\", \\\"UDP\\\", \\\"SCTP\\\", \\\"ANY\\\" \\n Matching on ICMP is not supported. \\n Named port specified for a container may narrow this down, but may not contradict this.\",\n            \"enum\": [\n             \"TCP\",\n             \"UDP\",\n             \"SCTP\",\n             \"ANY\"\n            ],\n            \"type\": \"string\"\n           }\n          },\n          \"required\": [\n           \"port\"\n          ],\n          \"type\": \"object\"\n         },\n         \"type\": \"array\"\n        }\n       },\n       \"type\": \"object\"\n      },\n      \"type\": \"array\"\n     },\n     \"toRequires\": {\n      \"description\": \"ToRequires is a list of additional constraints which must be met in order for the selected endpoints to be able to connect to other endpoints. These additional constraints do no by itself grant access privileges and must always be accompanied with at least one matching ToEndpoints. \\n Example: Any Endpoint with the label \\\"team=A\\\" requires any endpoint to which it communicates to also carry the label \\\"team=A\\\".\",\n      \"items\": {\n       \"description\": \"EndpointSelector is a wrapper for k8s LabelSelector.\",\n       \"properties\": {\n        \"matchExpressions\": {\n         \"description\": \"matchExpressions is a list of label selector requirements. The requirements are ANDed.\",\n         \"items\": {\n          \"description\": \"A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.\",\n          \"properties\": {\n           \"key\": {\n            \"description\": \"key is the label key that the selector applies to.\",\n            \"type\": \"string\"\n           },\n           \"operator\": {\n            \"description\": \"operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.\",\n            \"enum\": [\n             \"In\",\n             \"NotIn\",\n             \"Exists\",\n             \"DoesNotExist\"\n            ],\n            \"type\": \"string\"\n           },\n           \"values\": {\n            \"description\": \"values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.\",\n            \"items\": {\n             \"type\": \"string\"\n            },\n            \"type\": \"array\"\n           }\n          },\n          \"required\": [\n           \"key\",\n           \"operator\"\n          ],\n          \"type\": \"object\"\n         },\n         \"type\": \"array\"\n        },\n        \"matchLabels\": {\n         \"additionalProperties\": {\n          \"description\": \"MatchLabelsValue represents the value from the MatchLabels {key,value} pair.\",\n          \"maxLength\": 63,\n          \"pattern\": \"^(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])?$\",\n          \"type\": \"string\"\n         },\n         \"description\": \"matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is \\\"key\\\", the operator is \\\"In\\\", and the values array contains only \\\"value\\\". The requirements are ANDed.\",\n         \"type\": \"object\"\n        }\n       },\n       \"type\": \"object\"\n      },\n      \"type\": \"array\"\n     },\n     \"toServices\": {\n      \"description\": \"ToServices is a list of services to which the endpoint subject to the rule is allowed to initiate connections. Currently Cilium only supports toServices for K8s services without selectors. \\n Example: Any endpoint with the label \\\"app=backend-app\\\" is allowed to initiate connections to all cidrs backing the \\\"external-service\\\" service\",\n      \"items\": {\n       \"description\": \"Service wraps around selectors for services\",\n       \"properties\": {\n        \"k8sService\": {\n         \"description\": \"K8sService selects service by name and namespace pair\",\n         \"properties\": {\n          \"namespace\": {\n           \"type\": \"string\"\n          },\n          \"serviceName\": {\n           \"type\": \"string\"\n          }\n         },\n         \"type\": \"object\"\n        },\n        \"k8sServiceSelector\": {\n         \"description\": \"K8sServiceSelector selects services by k8s labels and namespace\",\n         \"properties\": {\n          \"namespace\": {\n           \"type\": \"string\"\n          },\n          \"selector\": {\n           \"description\": \"ServiceSelector is a label selector for k8s services\",\n           \"properties\": {\n            \"matchExpressions\": {\n             \"description\": \"matchExpressions is a list of label selector requirements. The requirements are ANDed.\",\n             \"items\": {\n              \"description\": \"A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.\",\n              \"properties\": {\n               \"key\": {\n                \"description\": \"key is the label key that the selector applies to.\",\n                \"type\": \"string\"\n               },\n               \"operator\": {\n                \"description\": \"operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.\",\n                \"enum\": [\n                 \"In\",\n                 \"NotIn\",\n                 \"Exists\",\n                 \"DoesNotExist\"\n                ],\n                \"type\": \"string\"\n               },\n               \"values\": {\n                \"description\": \"values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.\",\n                \"items\": {\n                 \"type\": \"string\"\n                },\n                \"type\": \"array\"\n               }\n              },\n              \"required\": [\n               \"key\",\n               \"operator\"\n              ],\n              \"type\": \"object\"\n             },\n             \"type\": \"array\"\n            },\n            \"matchLabels\": {\n             \"additionalProperties\": {\n              \"description\": \"MatchLabelsValue represents the value from the MatchLabels {key,value} pair.\",\n              \"maxLength\": 63,\n              \"pattern\": \"^(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])?$\",\n              \"type\": \"string\"\n             },\n             \"description\": \"matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is \\\"key\\\", the operator is \\\"In\\\", and the values array contains only \\\"value\\\". The requirements are ANDed.\",\n             \"type\": \"object\"\n            }\n           },\n           \"type\": \"object\"\n          }\n         },\n         \"required\": [\n          \"selector\"\n         ],\n         \"type\": \"object\"\n        }\n       },\n       \"type\": \"object\"\n      },\n      \"type\": \"array\"\n     }\n    },\n    \"type\": \"object\"\n   },\n   \"type\": \"array\"\n  },\n  \"endpointSelector\": {\n   \"description\": \"EndpointSelector selects all endpoints which should be subject to this rule. EndpointSelector and NodeSelector cannot be both empty and are mutually exclusive.\",\n   \"properties\": {\n    \"matchExpressions\": {\n     \"description\": \"matchExpressions is a list of label selector requirements. The requirements are ANDed.\",\n     \"items\": {\n      \"description\": \"A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.\",\n      \"properties\": {\n       \"key\": {\n        \"description\": \"key is the label key that the selector applies to.\",\n        \"type\": \"string\"\n       },\n       \"operator\": {\n        \"description\": \"operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.\",\n        \"enum\": [\n         \"In\",\n         \"NotIn\",\n         \"Exists\",\n         \"DoesNotExist\"\n        ],\n        \"type\": \"string\"\n       },\n       \"values\": {\n        \"description\": \"values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.\",\n        \"items\": {\n         \"type\": \"string\"\n        },\n        \"type\": \"array\"\n       }\n      },\n      \"required\": [\n       \"key\",\n       \"operator\"\n      ],\n      \"type\": \"object\"\n     },\n     \"type\": \"array\"\n    },\n    \"matchLabels\": {\n     \"additionalProperties\": {\n      \"description\": \"MatchLabelsValue represents the value from the MatchLabels {key,value} pair.\",\n      \"maxLength\": 63,\n      \"pattern\": \"^(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])?$\",\n      \"type\": \"string\"\n     },\n     \"description\": \"matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is \\\"key\\\", the operator is \\\"In\\\", and the values array contains only \\\"value\\\". The requirements are ANDed.\",\n     \"type\": \"object\"\n    }\n   },\n   \"type\": \"object\"\n  },\n  \"ingress\": {\n   \"description\": \"Ingress is a list of IngressRule which are enforced at ingress. If omitted or empty, this rule does not apply at ingress.\",\n   \"items\": {\n    \"description\": \"IngressRule contains all rule types which can be applied at ingress, i.e. network traffic that originates outside of the endpoint and is entering the endpoint selected by the endpointSelector. \\n   - All members of this structure are optional. If omitted or empty, the     member will have no effect on the rule. \\n   - If multiple members are set, all of them need to match in order for     the rule to take effect. The exception to this rule is FromRequires field;     the effects of any Requires field in any rule will apply to all other     rules as well. \\n   - FromEndpoints, FromCIDR, FromCIDRSet and FromEntities are mutually     exclusive. Only one of these members may be present within an individual     rule.\",\n    \"properties\": {\n     \"auth\": {\n      \"description\": \"Auth is the required authentication type for the allowed traffic, if any.\",\n      \"properties\": {\n       \"type\": {\n        \"description\": \"Type is the required authentication type for the allowed traffic, if any.\",\n        \"enum\": [\n         \"null\"\n        ],\n        \"type\": \"string\"\n       }\n      },\n      \"required\": [\n       \"type\"\n      ],\n      \"type\": \"object\"\n     },\n     \"fromCIDR\": {\n      \"description\": \"FromCIDR is a list of IP blocks which the endpoint subject to the rule is allowed to receive connections from. Only connections which do *not* originate from the cluster or from the local host are subject to CIDR rules. In order to allow in-cluster connectivity, use the FromEndpoints field.  This will match on the source IP address of incoming connections. Adding  a prefix into FromCIDR or into FromCIDRSet with no ExcludeCIDRs is  equivalent.  Overlaps are allowed between FromCIDR and FromCIDRSet. \\n Example: Any endpoint with the label \\\"app=my-legacy-pet\\\" is allowed to receive connections from 10.3.9.1\",\n      \"items\": {\n       \"description\": \"CIDR specifies a block of IP addresses. Example: 192.0.2.1/32\",\n       \"pattern\": \"^(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\\\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\\\/([0-9]|[1-2][0-9]|3[0-2])$|^s*((([0-9A-Fa-f]{1,4}:){7}(:|([0-9A-Fa-f]{1,4})))|(([0-9A-Fa-f]{1,4}:){6}:([0-9A-Fa-f]{1,4})?)|(([0-9A-Fa-f]{1,4}:){5}(((:[0-9A-Fa-f]{1,4}){0,1}):([0-9A-Fa-f]{1,4})?))|(([0-9A-Fa-f]{1,4}:){4}(((:[0-9A-Fa-f]{1,4}){0,2}):([0-9A-Fa-f]{1,4})?))|(([0-9A-Fa-f]{1,4}:){3}(((:[0-9A-Fa-f]{1,4}){0,3}):([0-9A-Fa-f]{1,4})?))|(([0-9A-Fa-f]{1,4}:){2}(((:[0-9A-Fa-f]{1,4}){0,4}):([0-9A-Fa-f]{1,4})?))|(([0-9A-Fa-f]{1,4}:){1}(((:[0-9A-Fa-f]{1,4}){0,5}):([0-9A-Fa-f]{1,4})?))|(:(:|((:[0-9A-Fa-f]{1,4}){1,7}))))(%.+)?s*/([0-9]|[1-9][0-9]|1[0-1][0-9]|12[0-8])$\",\n       \"type\": \"string\"\n      },\n      \"type\": \"array\"\n     },\n     \"fromCIDRSet\": {\n      \"description\": \"FromCIDRSet is a list of IP blocks which the endpoint subject to the rule is allowed to receive connections from in addition to FromEndpoints, along with a list of subnets contained within their corresponding IP block from which traffic should not be allowed. This will match on the source IP address of incoming connections. Adding a prefix into FromCIDR or into FromCIDRSet with no ExcludeCIDRs is equivalent. Overlaps are allowed between FromCIDR and FromCIDRSet. \\n Example: Any endpoint with the label \\\"app=my-legacy-pet\\\" is allowed to receive connections from 10.0.0.0/8 except from IPs in subnet 10.96.0.0/12.\",\n      \"items\": {\n       \"description\": \"CIDRRule is a rule that specifies a CIDR prefix to/from which outside communication  is allowed, along with an optional list of subnets within that CIDR prefix to/from which outside communication is not allowed.\",\n       \"properties\": {\n        \"cidr\": {\n         \"description\": \"CIDR is a CIDR prefix / IP Block.\",\n         \"pattern\": \"^(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\\\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\\\/([0-9]|[1-2][0-9]|3[0-2])$|^s*((([0-9A-Fa-f]{1,4}:){7}(:|([0-9A-Fa-f]{1,4})))|(([0-9A-Fa-f]{1,4}:){6}:([0-9A-Fa-f]{1,4})?)|(([0-9A-Fa-f]{1,4}:){5}(((:[0-9A-Fa-f]{1,4}){0,1}):([0-9A-Fa-f]{1,4})?))|(([0-9A-Fa-f]{1,4}:){4}(((:[0-9A-Fa-f]{1,4}){0,2}):([0-9A-Fa-f]{1,4})?))|(([0-9A-Fa-f]{1,4}:){3}(((:[0-9A-Fa-f]{1,4}){0,3}):([0-9A-Fa-f]{1,4})?))|(([0-9A-Fa-f]{1,4}:){2}(((:[0-9A-Fa-f]{1,4}){0,4}):([0-9A-Fa-f]{1,4})?))|(([0-9A-Fa-f]{1,4}:){1}(((:[0-9A-Fa-f]{1,4}){0,5}):([0-9A-Fa-f]{1,4})?))|(:(:|((:[0-9A-Fa-f]{1,4}){1,7}))))(%.+)?s*/([0-9]|[1-9][0-9]|1[0-1][0-9]|12[0-8])$\",\n         \"type\": \"string\"\n        },\n        \"except\": {\n         \"description\": \"ExceptCIDRs is a list of IP blocks which the endpoint subject to the rule is not allowed to initiate connections to. These CIDR prefixes should be contained within Cidr. These exceptions are only applied to the Cidr in this CIDRRule, and do not apply to any other CIDR prefixes in any other CIDRRules.\",\n         \"items\": {\n          \"description\": \"CIDR specifies a block of IP addresses. Example: 192.0.2.1/32\",\n          \"pattern\": \"^(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\\\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\\\/([0-9]|[1-2][0-9]|3[0-2])$|^s*((([0-9A-Fa-f]{1,4}:){7}(:|([0-9A-Fa-f]{1,4})))|(([0-9A-Fa-f]{1,4}:){6}:([0-9A-Fa-f]{1,4})?)|(([0-9A-Fa-f]{1,4}:){5}(((:[0-9A-Fa-f]{1,4}){0,1}):([0-9A-Fa-f]{1,4})?))|(([0-9A-Fa-f]{1,4}:){4}(((:[0-9A-Fa-f]{1,4}){0,2}):([0-9A-Fa-f]{1,4})?))|(([0-9A-Fa-f]{1,4}:){3}(((:[0-9A-Fa-f]{1,4}){0,3}):([0-9A-Fa-f]{1,4})?))|(([0-9A-Fa-f]{1,4}:){2}(((:[0-9A-Fa-f]{1,4}){0,4}):([0-9A-Fa-f]{1,4})?))|(([0-9A-Fa-f]{1,4}:){1}(((:[0-9A-Fa-f]{1,4}){0,5}):([0-9A-Fa-f]{1,4})?))|(:(:|((:[0-9A-Fa-f]{1,4}){1,7}))))(%.+)?s*/([0-9]|[1-9][0-9]|1[0-1][0-9]|12[0-8])$\",\n          \"type\": \"string\"\n         },\n         \"type\": \"array\"\n        }\n       },\n       \"required\": [\n        \"cidr\"\n       ],\n       \"type\": \"object\"\n      },\n      \"type\": \"array\"\n     },\n     \"fromEndpoints\": {\n      \"description\": \"FromEndpoints is a list of endpoints identified by an EndpointSelector which are allowed to communicate with the endpoint subject to the rule. \\n Example: Any endpoint with the label \\\"role=backend\\\" can be consumed by any endpoint carrying the label \\\"role=frontend\\\".\",\n      \"items\": {\n       \"description\": \"EndpointSelector is a wrapper for k8s LabelSelector.\",\n       \"properties\": {\n        \"matchExpressions\": {\n         \"description\": \"matchExpressions is a list of label selector requirements. The requirements are ANDed.\",\n         \"items\": {\n          \"description\": \"A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.\",\n          \"properties\": {\n           \"key\": {\n            \"description\": \"key is the label key that the selector applies to.\",\n            \"type\": \"string\"\n           },\n           \"operator\": {\n            \"description\": \"operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.\",\n            \"enum\": [\n             \"In\",\n             \"NotIn\",\n             \"Exists\",\n             \"DoesNotExist\"\n            ],\n            \"type\": \"string\"\n           },\n           \"values\": {\n            \"description\": \"values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.\",\n            \"items\": {\n             \"type\": \"string\"\n            },\n            \"type\": \"array\"\n           }\n          },\n          \"required\": [\n           \"key\",\n           \"operator\"\n          ],\n          \"type\": \"object\"\n         },\n         \"type\": \"array\"\n        },\n        \"matchLabels\": {\n         \"additionalProperties\": {\n          \"description\": \"MatchLabelsValue represents the value from the MatchLabels {key,value} pair.\",\n          \"maxLength\": 63,\n          \"pattern\": \"^(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])?$\",\n          \"type\": \"string\"\n         },\n         \"description\": \"matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is \\\"key\\\", the operator is \\\"In\\\", and the values array contains only \\\"value\\\". The requirements are ANDed.\",\n         \"type\": \"object\"\n        }\n       },\n       \"type\": \"object\"\n      },\n      \"type\": \"array\"\n     },\n     \"fromEntities\": {\n      \"description\": \"FromEntities is a list of special entities which the endpoint subject to the rule is allowed to receive connections from. Supported entities are `world`, `cluster` and `host`\",\n      \"items\": {\n       \"description\": \"Entity specifies the class of receiver/sender endpoints that do not have individual identities.  Entities are used to describe \\\"outside of cluster\\\", \\\"host\\\", etc.\",\n       \"enum\": [\n        \"all\",\n        \"world\",\n        \"cluster\",\n        \"host\",\n        \"init\",\n        \"ingress\",\n        \"unmanaged\",\n        \"remote-node\",\n        \"health\",\n        \"none\",\n        \"kube-apiserver\"\n       ],\n       \"type\": \"string\"\n      },\n      \"type\": \"array\"\n     },\n     \"fromRequires\": {\n      \"description\": \"FromRequires is a list of additional constraints which must be met in order for the selected endpoints to be reachable. These additional constraints do no by itself grant access privileges and must always be accompanied with at least one matching FromEndpoints. \\n Example: Any Endpoint with the label \\\"team=A\\\" requires consuming endpoint to also carry the label \\\"team=A\\\".\",\n      \"items\": {\n       \"description\": \"EndpointSelector is a wrapper for k8s LabelSelector.\",\n       \"properties\": {\n        \"matchExpressions\": {\n         \"description\": \"matchExpressions is a list of label selector requirements. The requirements are ANDed.\",\n         \"items\": {\n          \"description\": \"A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.\",\n          \"properties\": {\n           \"key\": {\n            \"description\": \"key is the label key that the selector applies to.\",\n            \"type\": \"string\"\n           },\n           \"operator\": {\n            \"description\": \"operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.\",\n            \"enum\": [\n             \"In\",\n             \"NotIn\",\n             \"Exists\",\n             \"DoesNotExist\"\n            ],\n            \"type\": \"string\"\n           },\n           \"values\": {\n            \"description\": \"values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.\",\n            \"items\": {\n             \"type\": \"string\"\n            },\n            \"type\": \"array\"\n           }\n          },\n          \"required\": [\n           \"key\",\n           \"operator\"\n          ],\n          \"type\": \"object\"\n         },\n         \"type\": \"array\"\n        },\n        \"matchLabels\": {\n         \"additionalProperties\": {\n          \"description\": \"MatchLabelsValue represents the value from the MatchLabels {key,value} pair.\",\n          \"maxLength\": 63,\n          \"pattern\": \"^(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])?$\",\n          \"type\": \"string\"\n         },\n         \"description\": \"matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is \\\"key\\\", the operator is \\\"In\\\", and the values array contains only \\\"value\\\". The requirements are ANDed.\",\n         \"type\": \"object\"\n        }\n       },\n       \"type\": \"object\"\n      },\n      \"type\": \"array\"\n     },\n     \"icmps\": {\n      \"description\": \"ICMPs is a list of ICMP rule identified by type number which the endpoint subject to the rule is allowed to receive connections on. \\n Example: Any endpoint with the label \\\"app=httpd\\\" can only accept incoming type 8 ICMP connections.\",\n      \"items\": {\n       \"description\": \"ICMPRule is a list of ICMP fields.\",\n       \"properties\": {\n        \"fields\": {\n         \"description\": \"Fields is a list of ICMP fields.\",\n         \"items\": {\n          \"description\": \"ICMPField is a ICMP field.\",\n          \"properties\": {\n           \"family\": {\n            \"default\": \"IPv4\",\n            \"description\": \"Family is a IP address version. Currently, we support `IPv4` and `IPv6`. `IPv4` is set as default.\",\n            \"enum\": [\n             \"IPv4\",\n             \"IPv6\"\n            ],\n            \"type\": \"string\"\n           },\n           \"type\": {\n            \"description\": \"Type is a ICMP-type. It should be 0-255 (8bit).\",\n            \"maximum\": 255,\n            \"minimum\": 0,\n            \"type\": \"integer\"\n           }\n          },\n          \"required\": [\n           \"type\"\n          ],\n          \"type\": \"object\"\n         },\n         \"type\": \"array\"\n        }\n       },\n       \"type\": \"object\"\n      },\n      \"type\": \"array\"\n     },\n     \"toPorts\": {\n      \"description\": \"ToPorts is a list of destination ports identified by port number and protocol which the endpoint subject to the rule is allowed to receive connections on. \\n Example: Any endpoint with the label \\\"app=httpd\\\" can only accept incoming connections on port 80/tcp.\",\n      \"items\": {\n       \"description\": \"PortRule is a list of ports/protocol combinations with optional Layer 7 rules which must be met.\",\n       \"properties\": {\n        \"listener\": {\n         \"description\": \"listener specifies the name of a custom Envoy listener to which this traffic should be redirected to.\",\n         \"properties\": {\n          \"envoyConfig\": {\n           \"description\": \"EnvoyConfig is a reference to the CEC or CCNP resource in which the listener is defined.\",\n           \"properties\": {\n            \"kind\": {\n             \"description\": \"Kind is the resource type being referred to. Defaults to CiliumEnvoyConfig or CiliumClusterwideEnvoyConfig for CiliumNetworkPolicy and CiliumClusterwideNetworkPolicy, respectively. The only case this is currently explicitly needed is when referring to a CiliumClusterwideEnvoyConfig from CiliumNetworkPolicy, as using a namespaced listener from a cluster scoped policy is not allowed.\",\n             \"enum\": [\n              \"CiliumEnvoyConfig\",\n              \"CiliumClusterwideEnvoyConfig\"\n             ],\n             \"type\": \"string\"\n            },\n            \"name\": {\n             \"description\": \"Name is the resource name of the CiliumEnvoyConfig or CiliumClusterwideEnvoyConfig where the listener is defined in.\",\n             \"minLength\": 1,\n             \"type\": \"string\"\n            }\n           },\n           \"required\": [\n            \"name\"\n           ],\n           \"type\": \"object\"\n          },\n          \"name\": {\n           \"description\": \"Name is the name of the listener.\",\n           \"minLength\": 1,\n           \"type\": \"string\"\n          }\n         },\n         \"required\": [\n          \"envoyConfig\",\n          \"name\"\n         ],\n         \"type\": \"object\"\n        },\n        \"originatingTLS\": {\n         \"description\": \"OriginatingTLS is the TLS context for the connections originated by the L7 proxy.  For egress policy this specifies the client-side TLS parameters for the upstream connection originating from the L7 proxy to the remote destination. For ingress policy this specifies the client-side TLS parameters for the connection from the L7 proxy to the local endpoint.\",\n         \"properties\": {\n          \"certificate\": {\n           \"description\": \"Certificate is the file name or k8s secret item name for the certificate chain. If omitted, 'tls.crt' is assumed, if it exists. If given, the item must exist.\",\n           \"type\": \"string\"\n          },\n          \"privateKey\": {\n           \"description\": \"PrivateKey is the file name or k8s secret item name for the private key matching the certificate chain. If omitted, 'tls.key' is assumed, if it exists. If given, the item must exist.\",\n           \"type\": \"string\"\n          },\n          \"secret\": {\n           \"description\": \"Secret is the secret that contains the certificates and private key for the TLS context. By default, Cilium will search in this secret for the following items:  - 'ca.crt'  - Which represents the trusted CA to verify remote source.  - 'tls.crt' - Which represents the public key certificate.  - 'tls.key' - Which represents the private key matching the public key                certificate.\",\n           \"properties\": {\n            \"name\": {\n             \"description\": \"Name is the name of the secret.\",\n             \"type\": \"string\"\n            },\n            \"namespace\": {\n             \"description\": \"Namespace is the namespace in which the secret exists. Context of use determines the default value if left out (e.g., \\\"default\\\").\",\n             \"type\": \"string\"\n            }\n           },\n           \"required\": [\n            \"name\"\n           ],\n           \"type\": \"object\"\n          },\n          \"trustedCA\": {\n           \"description\": \"TrustedCA is the file name or k8s secret item name for the trusted CA. If omitted, 'ca.crt' is assumed, if it exists. If given, the item must exist.\",\n           \"type\": \"string\"\n          }\n         },\n         \"required\": [\n          \"secret\"\n         ],\n         \"type\": \"object\"\n        },\n        \"ports\": {\n         \"description\": \"Ports is a list of L4 port/protocol\",\n         \"items\": {\n          \"description\": \"PortProtocol specifies an L4 port with an optional transport protocol\",\n          \"properties\": {\n           \"port\": {\n            \"description\": \"Port is an L4 port number. For now the string will be strictly parsed as a single uint16. In the future, this field may support ranges in the form \\\"1024-2048 Port can also be a port name, which must contain at least one [a-z], and may also contain [0-9] and '-' anywhere except adjacent to another '-' or in the beginning or the end.\",\n            \"pattern\": \"^(6553[0-5]|655[0-2][0-9]|65[0-4][0-9]{2}|6[0-4][0-9]{3}|[1-5][0-9]{4}|[0-9]{1,4})|([a-zA-Z0-9]-?)*[a-zA-Z](-?[a-zA-Z0-9])*$\",\n            \"type\": \"string\"\n           },\n           \"protocol\": {\n            \"description\": \"Protocol is the L4 protocol. If omitted or empty, any protocol matches. Accepted values: \\\"TCP\\\", \\\"UDP\\\", \\\"SCTP\\\", \\\"ANY\\\" \\n Matching on ICMP is not supported. \\n Named port specified for a container may narrow this down, but may not contradict this.\",\n            \"enum\": [\n             \"TCP\",\n             \"UDP\",\n             \"SCTP\",\n             \"ANY\"\n            ],\n            \"type\": \"string\"\n           }\n          },\n          \"required\": [\n           \"port\"\n          ],\n          \"type\": \"object\"\n         },\n         \"type\": \"array\"\n        },\n        \"rules\": {\n         \"description\": \"Rules is a list of additional port level rules which must be met in order for the PortRule to allow the traffic. If omitted or empty, no layer 7 rules are enforced.\",\n         \"properties\": {\n          \"dns\": {\n           \"description\": \"DNS-specific rules.\",\n           \"items\": {\n            \"description\": \"PortRuleDNS is a list of allowed DNS lookups.\",\n            \"properties\": {\n             \"matchName\": {\n              \"description\": \"MatchName matches literal DNS names. A trailing \\\".\\\" is automatically added when missing.\",\n              \"pattern\": \"^([-a-zA-Z0-9_]+[.]?)+$\",\n              \"type\": \"string\"\n             },\n             \"matchPattern\": {\n              \"description\": \"MatchPattern allows using wildcards to match DNS names. All wildcards are case insensitive. The wildcards are: - \\\"*\\\" matches 0 or more DNS valid characters, and may occur anywhere in the pattern. As a special case a \\\"*\\\" as the leftmost character, without a following \\\".\\\" matches all subdomains as well as the name to the right. A trailing \\\".\\\" is automatically added when missing. \\n Examples: `*.cilium.io` matches subomains of cilium at that level   www.cilium.io and blog.cilium.io match, cilium.io and google.com do not `*cilium.io` matches cilium.io and all subdomains ends with \\\"cilium.io\\\"   except those containing \\\".\\\" separator, subcilium.io and sub-cilium.io match,   www.cilium.io and blog.cilium.io does not sub*.cilium.io matches subdomains of cilium where the subdomain component begins with \\\"sub\\\"   sub.cilium.io and subdomain.cilium.io match, www.cilium.io,   blog.cilium.io, cilium.io and google.com do not\",\n              \"pattern\": \"^([-a-zA-Z0-9_*]+[.]?)+$\",\n              \"type\": \"string\"\n             }\n            },\n            \"type\": \"object\"\n           },\n           \"type\": \"array\"\n          },\n          \"http\": {\n           \"description\": \"HTTP specific rules.\",\n           \"items\": {\n            \"description\": \"PortRuleHTTP is a list of HTTP protocol constraints. All fields are optional, if all fields are empty or missing, the rule does not have any effect. \\n All fields of this type are extended POSIX regex as defined by IEEE Std 1003.1, (i.e this follows the egrep/unix syntax, not the perl syntax) matched against the path of an incoming request. Currently it can contain characters disallowed from the conventional \\\"path\\\" part of a URL as defined by RFC 3986.\",\n            \"properties\": {\n             \"headerMatches\": {\n              \"description\": \"HeaderMatches is a list of HTTP headers which must be present and match against the given values. Mismatch field can be used to specify what to do when there is no match.\",\n              \"items\": {\n               \"description\": \"HeaderMatch extends the HeaderValue for matching requirement of a named header field against an immediate string, a secret value, or a regex.  If none of the optional fields is present, then the header value is not matched, only presence of the header is enough.\",\n               \"properties\": {\n                \"mismatch\": {\n                 \"description\": \"Mismatch identifies what to do in case there is no match. The default is to drop the request. Otherwise the overall rule is still considered as matching, but the mismatches are logged in the access log.\",\n                 \"enum\": [\n                  \"LOG\",\n                  \"ADD\",\n                  \"DELETE\",\n                  \"REPLACE\"\n                 ],\n                 \"type\": \"string\"\n                },\n                \"name\": {\n                 \"description\": \"Name identifies the header.\",\n                 \"type\": \"string\"\n                },\n                \"secret\": {\n                 \"description\": \"Secret refers to a secret that contains the value to be matched against. The secret must only contain one entry. If the referred secret does not exist, and there is no \\\"Value\\\" specified, the match will fail.\",\n                 \"properties\": {\n                  \"name\": {\n                   \"description\": \"Name is the name of the secret.\",\n                   \"type\": \"string\"\n                  },\n                  \"namespace\": {\n                   \"description\": \"Namespace is the namespace in which the secret exists. Context of use determines the default value if left out (e.g., \\\"default\\\").\",\n                   \"type\": \"string\"\n                  }\n                 },\n                 \"required\": [\n                  \"name\"\n                 ],\n                 \"type\": \"object\"\n                },\n                \"value\": {\n                 \"description\": \"Value matches the exact value of the header. Can be specified either alone or together with \\\"Secret\\\"; will be used as the header value if the secret can not be found in the latter case.\",\n                 \"type\": \"string\"\n                }\n               },\n               \"required\": [\n                \"name\"\n               ],\n               \"type\": \"object\"\n              },\n              \"type\": \"array\"\n             },\n             \"headers\": {\n              \"description\": \"Headers is a list of HTTP headers which must be present in the request. If omitted or empty, requests are allowed regardless of headers present.\",\n              \"items\": {\n               \"type\": \"string\"\n              },\n              \"type\": \"array\"\n             },\n             \"host\": {\n              \"description\": \"Host is an extended POSIX regex matched against the host header of a request, e.g. \\\"foo.com\\\" \\n If omitted or empty, the value of the host header is ignored.\",\n              \"format\": \"idn-hostname\",\n              \"type\": \"string\"\n             },\n             \"method\": {\n              \"description\": \"Method is an extended POSIX regex matched against the method of a request, e.g. \\\"GET\\\", \\\"POST\\\", \\\"PUT\\\", \\\"PATCH\\\", \\\"DELETE\\\", ... \\n If omitted or empty, all methods are allowed.\",\n              \"type\": \"string\"\n             },\n             \"path\": {\n              \"description\": \"Path is an extended POSIX regex matched against the path of a request. Currently it can contain characters disallowed from the conventional \\\"path\\\" part of a URL as defined by RFC 3986. \\n If omitted or empty, all paths are all allowed.\",\n              \"type\": \"string\"\n             }\n            },\n            \"type\": \"object\"\n           },\n           \"type\": \"array\"\n          },\n          \"kafka\": {\n           \"description\": \"Kafka-specific rules.\",\n           \"items\": {\n            \"description\": \"PortRule is a list of Kafka protocol constraints. All fields are optional, if all fields are empty or missing, the rule will match all Kafka messages.\",\n            \"properties\": {\n             \"apiKey\": {\n              \"description\": \"APIKey is a case-insensitive string matched against the key of a request, e.g. \\\"produce\\\", \\\"fetch\\\", \\\"createtopic\\\", \\\"deletetopic\\\", et al Reference: https://kafka.apache.org/protocol#protocol_api_keys \\n If omitted or empty, and if Role is not specified, then all keys are allowed.\",\n              \"type\": \"string\"\n             },\n             \"apiVersion\": {\n              \"description\": \"APIVersion is the version matched against the api version of the Kafka message. If set, it has to be a string representing a positive integer. \\n If omitted or empty, all versions are allowed.\",\n              \"type\": \"string\"\n             },\n             \"clientID\": {\n              \"description\": \"ClientID is the client identifier as provided in the request. \\n From Kafka protocol documentation: This is a user supplied identifier for the client application. The user can use any identifier they like and it will be used when logging errors, monitoring aggregates, etc. For example, one might want to monitor not just the requests per second overall, but the number coming from each client application (each of which could reside on multiple servers). This id acts as a logical grouping across all requests from a particular client. \\n If omitted or empty, all client identifiers are allowed.\",\n              \"type\": \"string\"\n             },\n             \"role\": {\n              \"description\": \"Role is a case-insensitive string and describes a group of API keys necessary to perform certain higher-level Kafka operations such as \\\"produce\\\" or \\\"consume\\\". A Role automatically expands into all APIKeys required to perform the specified higher-level operation. \\n The following values are supported:  - \\\"produce\\\": Allow producing to the topics specified in the rule  - \\\"consume\\\": Allow consuming from the topics specified in the rule \\n This field is incompatible with the APIKey field, i.e APIKey and Role cannot both be specified in the same rule. \\n If omitted or empty, and if APIKey is not specified, then all keys are allowed.\",\n              \"enum\": [\n               \"produce\",\n               \"consume\"\n              ],\n              \"type\": \"string\"\n             },\n             \"topic\": {\n              \"description\": \"Topic is the topic name contained in the message. If a Kafka request contains multiple topics, then all topics must be allowed or the message will be rejected. \\n This constraint is ignored if the matched request message type doesn't contain any topic. Maximum size of Topic can be 249 characters as per recent Kafka spec and allowed characters are a-z, A-Z, 0-9, -, . and _. \\n Older Kafka versions had longer topic lengths of 255, but in Kafka 0.10 version the length was changed from 255 to 249. For compatibility reasons we are using 255. \\n If omitted or empty, all topics are allowed.\",\n              \"maxLength\": 255,\n              \"type\": \"string\"\n             }\n            },\n            \"type\": \"object\"\n           },\n           \"type\": \"array\"\n          },\n          \"l7\": {\n           \"description\": \"Key-value pair rules.\",\n           \"items\": {\n            \"additionalProperties\": {\n             \"type\": \"string\"\n            },\n            \"description\": \"PortRuleL7 is a list of key-value pairs interpreted by a L7 protocol as protocol constraints. All fields are optional, if all fields are empty or missing, the rule does not have any effect.\",\n            \"type\": \"object\"\n           },\n           \"type\": \"array\"\n          },\n          \"l7proto\": {\n           \"description\": \"Name of the L7 protocol for which the Key-value pair rules apply.\",\n           \"type\": \"string\"\n          }\n         },\n         \"type\": \"object\"\n        },\n        \"serverNames\": {\n         \"description\": \"ServerNames is a list of allowed TLS SNI values. If not empty, then TLS must be present and one of the provided SNIs must be indicated in the TLS handshake.\",\n         \"items\": {\n          \"type\": \"string\"\n         },\n         \"type\": \"array\"\n        },\n        \"terminatingTLS\": {\n         \"description\": \"TerminatingTLS is the TLS context for the connection terminated by the L7 proxy.  For egress policy this specifies the server-side TLS parameters to be applied on the connections originated from the local endpoint and terminated by the L7 proxy. For ingress policy this specifies the server-side TLS parameters to be applied on the connections originated from a remote source and terminated by the L7 proxy.\",\n         \"properties\": {\n          \"certificate\": {\n           \"description\": \"Certificate is the file name or k8s secret item name for the certificate chain. If omitted, 'tls.crt' is assumed, if it exists. If given, the item must exist.\",\n           \"type\": \"string\"\n          },\n          \"privateKey\": {\n           \"description\": \"PrivateKey is the file name or k8s secret item name for the private key matching the certificate chain. If omitted, 'tls.key' is assumed, if it exists. If given, the item must exist.\",\n           \"type\": \"string\"\n          },\n          \"secret\": {\n           \"description\": \"Secret is the secret that contains the certificates and private key for the TLS context. By default, Cilium will search in this secret for the following items:  - 'ca.crt'  - Which represents the trusted CA to verify remote source.  - 'tls.crt' - Which represents the public key certificate.  - 'tls.key' - Which represents the private key matching the public key                certificate.\",\n           \"properties\": {\n            \"name\": {\n             \"description\": \"Name is the name of the secret.\",\n             \"type\": \"string\"\n            },\n            \"namespace\": {\n             \"description\": \"Namespace is the namespace in which the secret exists. Context of use determines the default value if left out (e.g., \\\"default\\\").\",\n             \"type\": \"string\"\n            }\n           },\n           \"required\": [\n            \"name\"\n           ],\n           \"type\": \"object\"\n          },\n          \"trustedCA\": {\n           \"description\": \"TrustedCA is the file name or k8s secret item name for the trusted CA. If omitted, 'ca.crt' is assumed, if it exists. If given, the item must exist.\",\n           \"type\": \"string\"\n          }\n         },\n         \"required\": [\n          \"secret\"\n         ],\n         \"type\": \"object\"\n        }\n       },\n       \"type\": \"object\"\n      },\n      \"type\": \"array\"\n     }\n    },\n    \"type\": \"object\"\n   },\n   \"type\": \"array\"\n  },\n  \"ingressDeny\": {\n   \"description\": \"IngressDeny is a list of IngressDenyRule which are enforced at ingress. Any rule inserted here will by denied regardless of the allowed ingress rules in the 'ingress' field. If omitted or empty, this rule does not apply at ingress.\",\n   \"items\": {\n    \"description\": \"IngressDenyRule contains all rule types which can be applied at ingress, i.e. network traffic that originates outside of the endpoint and is entering the endpoint selected by the endpointSelector. \\n   - All members of this structure are optional. If omitted or empty, the     member will have no effect on the rule. \\n   - If multiple members are set, all of them need to match in order for     the rule to take effect. The exception to this rule is FromRequires field;     the effects of any Requires field in any rule will apply to all other     rules as well. \\n   - FromEndpoints, FromCIDR, FromCIDRSet and FromEntities are mutually     exclusive. Only one of these members may be present within an individual     rule.\",\n    \"properties\": {\n     \"fromCIDR\": {\n      \"description\": \"FromCIDR is a list of IP blocks which the endpoint subject to the rule is allowed to receive connections from. Only connections which do *not* originate from the cluster or from the local host are subject to CIDR rules. In order to allow in-cluster connectivity, use the FromEndpoints field.  This will match on the source IP address of incoming connections. Adding  a prefix into FromCIDR or into FromCIDRSet with no ExcludeCIDRs is  equivalent.  Overlaps are allowed between FromCIDR and FromCIDRSet. \\n Example: Any endpoint with the label \\\"app=my-legacy-pet\\\" is allowed to receive connections from 10.3.9.1\",\n      \"items\": {\n       \"description\": \"CIDR specifies a block of IP addresses. Example: 192.0.2.1/32\",\n       \"pattern\": \"^(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\\\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\\\/([0-9]|[1-2][0-9]|3[0-2])$|^s*((([0-9A-Fa-f]{1,4}:){7}(:|([0-9A-Fa-f]{1,4})))|(([0-9A-Fa-f]{1,4}:){6}:([0-9A-Fa-f]{1,4})?)|(([0-9A-Fa-f]{1,4}:){5}(((:[0-9A-Fa-f]{1,4}){0,1}):([0-9A-Fa-f]{1,4})?))|(([0-9A-Fa-f]{1,4}:){4}(((:[0-9A-Fa-f]{1,4}){0,2}):([0-9A-Fa-f]{1,4})?))|(([0-9A-Fa-f]{1,4}:){3}(((:[0-9A-Fa-f]{1,4}){0,3}):([0-9A-Fa-f]{1,4})?))|(([0-9A-Fa-f]{1,4}:){2}(((:[0-9A-Fa-f]{1,4}){0,4}):([0-9A-Fa-f]{1,4})?))|(([0-9A-Fa-f]{1,4}:){1}(((:[0-9A-Fa-f]{1,4}){0,5}):([0-9A-Fa-f]{1,4})?))|(:(:|((:[0-9A-Fa-f]{1,4}){1,7}))))(%.+)?s*/([0-9]|[1-9][0-9]|1[0-1][0-9]|12[0-8])$\",\n       \"type\": \"string\"\n      },\n      \"type\": \"array\"\n     },\n     \"fromCIDRSet\": {\n      \"description\": \"FromCIDRSet is a list of IP blocks which the endpoint subject to the rule is allowed to receive connections from in addition to FromEndpoints, along with a list of subnets contained within their corresponding IP block from which traffic should not be allowed. This will match on the source IP address of incoming connections. Adding a prefix into FromCIDR or into FromCIDRSet with no ExcludeCIDRs is equivalent. Overlaps are allowed between FromCIDR and FromCIDRSet. \\n Example: Any endpoint with the label \\\"app=my-legacy-pet\\\" is allowed to receive connections from 10.0.0.0/8 except from IPs in subnet 10.96.0.0/12.\",\n      \"items\": {\n       \"description\": \"CIDRRule is a rule that specifies a CIDR prefix to/from which outside communication  is allowed, along with an optional list of subnets within that CIDR prefix to/from which outside communication is not allowed.\",\n       \"properties\": {\n        \"cidr\": {\n         \"description\": \"CIDR is a CIDR prefix / IP Block.\",\n         \"pattern\": \"^(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\\\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\\\/([0-9]|[1-2][0-9]|3[0-2])$|^s*((([0-9A-Fa-f]{1,4}:){7}(:|([0-9A-Fa-f]{1,4})))|(([0-9A-Fa-f]{1,4}:){6}:([0-9A-Fa-f]{1,4})?)|(([0-9A-Fa-f]{1,4}:){5}(((:[0-9A-Fa-f]{1,4}){0,1}):([0-9A-Fa-f]{1,4})?))|(([0-9A-Fa-f]{1,4}:){4}(((:[0-9A-Fa-f]{1,4}){0,2}):([0-9A-Fa-f]{1,4})?))|(([0-9A-Fa-f]{1,4}:){3}(((:[0-9A-Fa-f]{1,4}){0,3}):([0-9A-Fa-f]{1,4})?))|(([0-9A-Fa-f]{1,4}:){2}(((:[0-9A-Fa-f]{1,4}){0,4}):([0-9A-Fa-f]{1,4})?))|(([0-9A-Fa-f]{1,4}:){1}(((:[0-9A-Fa-f]{1,4}){0,5}):([0-9A-Fa-f]{1,4})?))|(:(:|((:[0-9A-Fa-f]{1,4}){1,7}))))(%.+)?s*/([0-9]|[1-9][0-9]|1[0-1][0-9]|12[0-8])$\",\n         \"type\": \"string\"\n        },\n        \"except\": {\n         \"description\": \"ExceptCIDRs is a list of IP blocks which the endpoint subject to the rule is not allowed to initiate connections to. These CIDR prefixes should be contained within Cidr. These exceptions are only applied to the Cidr in this CIDRRule, and do not apply to any other CIDR prefixes in any other CIDRRules.\",\n         \"items\": {\n          \"description\": \"CIDR specifies a block of IP addresses. Example: 192.0.2.1/32\",\n          \"pattern\": \"^(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\\\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\\\/([0-9]|[1-2][0-9]|3[0-2])$|^s*((([0-9A-Fa-f]{1,4}:){7}(:|([0-9A-Fa-f]{1,4})))|(([0-9A-Fa-f]{1,4}:){6}:([0-9A-Fa-f]{1,4})?)|(([0-9A-Fa-f]{1,4}:){5}(((:[0-9A-Fa-f]{1,4}){0,1}):([0-9A-Fa-f]{1,4})?))|(([0-9A-Fa-f]{1,4}:){4}(((:[0-9A-Fa-f]{1,4}){0,2}):([0-9A-Fa-f]{1,4})?))|(([0-9A-Fa-f]{1,4}:){3}(((:[0-9A-Fa-f]{1,4}){0,3}):([0-9A-Fa-f]{1,4})?))|(([0-9A-Fa-f]{1,4}:){2}(((:[0-9A-Fa-f]{1,4}){0,4}):([0-9A-Fa-f]{1,4})?))|(([0-9A-Fa-f]{1,4}:){1}(((:[0-9A-Fa-f]{1,4}){0,5}):([0-9A-Fa-f]{1,4})?))|(:(:|((:[0-9A-Fa-f]{1,4}){1,7}))))(%.+)?s*/([0-9]|[1-9][0-9]|1[0-1][0-9]|12[0-8])$\",\n          \"type\": \"string\"\n         },\n         \"type\": \"array\"\n        }\n       },\n       \"required\": [\n        \"cidr\"\n       ],\n       \"type\": \"object\"\n      },\n      \"type\": \"array\"\n     },\n     \"fromEndpoints\": {\n      \"description\": \"FromEndpoints is a list of endpoints identified by an EndpointSelector which are allowed to communicate with the endpoint subject to the rule. \\n Example: Any endpoint with the label \\\"role=backend\\\" can be consumed by any endpoint carrying the label \\\"role=frontend\\\".\",\n      \"items\": {\n       \"description\": \"EndpointSelector is a wrapper for k8s LabelSelector.\",\n       \"properties\": {\n        \"matchExpressions\": {\n         \"description\": \"matchExpressions is a list of label selector requirements. The requirements are ANDed.\",\n         \"items\": {\n          \"description\": \"A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.\",\n          \"properties\": {\n           \"key\": {\n            \"description\": \"key is the label key that the selector applies to.\",\n            \"type\": \"string\"\n           },\n           \"operator\": {\n            \"description\": \"operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.\",\n            \"enum\": [\n             \"In\",\n             \"NotIn\",\n             \"Exists\",\n             \"DoesNotExist\"\n            ],\n            \"type\": \"string\"\n           },\n           \"values\": {\n            \"description\": \"values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.\",\n            \"items\": {\n             \"type\": \"string\"\n            },\n            \"type\": \"array\"\n           }\n          },\n          \"required\": [\n           \"key\",\n           \"operator\"\n          ],\n          \"type\": \"object\"\n         },\n         \"type\": \"array\"\n        },\n        \"matchLabels\": {\n         \"additionalProperties\": {\n          \"description\": \"MatchLabelsValue represents the value from the MatchLabels {key,value} pair.\",\n          \"maxLength\": 63,\n          \"pattern\": \"^(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])?$\",\n          \"type\": \"string\"\n         },\n         \"description\": \"matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is \\\"key\\\", the operator is \\\"In\\\", and the values array contains only \\\"value\\\". The requirements are ANDed.\",\n         \"type\": \"object\"\n        }\n       },\n       \"type\": \"object\"\n      },\n      \"type\": \"array\"\n     },\n     \"fromEntities\": {\n      \"description\": \"FromEntities is a list of special entities which the endpoint subject to the rule is allowed to receive connections from. Supported entities are `world`, `cluster` and `host`\",\n      \"items\": {\n       \"description\": \"Entity specifies the class of receiver/sender endpoints that do not have individual identities.  Entities are used to describe \\\"outside of cluster\\\", \\\"host\\\", etc.\",\n       \"enum\": [\n        \"all\",\n        \"world\",\n        \"cluster\",\n        \"host\",\n        \"init\",\n        \"ingress\",\n        \"unmanaged\",\n        \"remote-node\",\n        \"health\",\n        \"none\",\n        \"kube-apiserver\"\n       ],\n       \"type\": \"string\"\n      },\n      \"type\": \"array\"\n     },\n     \"fromRequires\": {\n      \"description\": \"FromRequires is a list of additional constraints which must be met in order for the selected endpoints to be reachable. These additional constraints do no by itself grant access privileges and must always be accompanied with at least one matching FromEndpoints. \\n Example: Any Endpoint with the label \\\"team=A\\\" requires consuming endpoint to also carry the label \\\"team=A\\\".\",\n      \"items\": {\n       \"description\": \"EndpointSelector is a wrapper for k8s LabelSelector.\",\n       \"properties\": {\n        \"matchExpressions\": {\n         \"description\": \"matchExpressions is a list of label selector requirements. The requirements are ANDed.\",\n         \"items\": {\n          \"description\": \"A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.\",\n          \"properties\": {\n           \"key\": {\n            \"description\": \"key is the label key that the selector applies to.\",\n            \"type\": \"string\"\n           },\n           \"operator\": {\n            \"description\": \"operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.\",\n            \"enum\": [\n             \"In\",\n             \"NotIn\",\n             \"Exists\",\n             \"DoesNotExist\"\n            ],\n            \"type\": \"string\"\n           },\n           \"values\": {\n            \"description\": \"values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.\",\n            \"items\": {\n             \"type\": \"string\"\n            },\n            \"type\": \"array\"\n           }\n          },\n          \"required\": [\n           \"key\",\n           \"operator\"\n          ],\n          \"type\": \"object\"\n         },\n         \"type\": \"array\"\n        },\n        \"matchLabels\": {\n         \"additionalProperties\": {\n          \"description\": \"MatchLabelsValue represents the value from the MatchLabels {key,value} pair.\",\n          \"maxLength\": 63,\n          \"pattern\": \"^(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])?$\",\n          \"type\": \"string\"\n         },\n         \"description\": \"matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is \\\"key\\\", the operator is \\\"In\\\", and the values array contains only \\\"value\\\". The requirements are ANDed.\",\n         \"type\": \"object\"\n        }\n       },\n       \"type\": \"object\"\n      },\n      \"type\": \"array\"\n     },\n     \"icmps\": {\n      \"description\": \"ICMPs is a list of ICMP rule identified by type number which the endpoint subject to the rule is not allowed to receive connections on. \\n Example: Any endpoint with the label \\\"app=httpd\\\" can not accept incoming type 8 ICMP connections.\",\n      \"items\": {\n       \"description\": \"ICMPRule is a list of ICMP fields.\",\n       \"properties\": {\n        \"fields\": {\n         \"description\": \"Fields is a list of ICMP fields.\",\n         \"items\": {\n          \"description\": \"ICMPField is a ICMP field.\",\n          \"properties\": {\n           \"family\": {\n            \"default\": \"IPv4\",\n            \"description\": \"Family is a IP address version. Currently, we support `IPv4` and `IPv6`. `IPv4` is set as default.\",\n            \"enum\": [\n             \"IPv4\",\n             \"IPv6\"\n            ],\n            \"type\": \"string\"\n           },\n           \"type\": {\n            \"description\": \"Type is a ICMP-type. It should be 0-255 (8bit).\",\n            \"maximum\": 255,\n            \"minimum\": 0,\n            \"type\": \"integer\"\n           }\n          },\n          \"required\": [\n           \"type\"\n          ],\n          \"type\": \"object\"\n         },\n         \"type\": \"array\"\n        }\n       },\n       \"type\": \"object\"\n      },\n      \"type\": \"array\"\n     },\n     \"toPorts\": {\n      \"description\": \"ToPorts is a list of destination ports identified by port number and protocol which the endpoint subject to the rule is not allowed to receive connections on. \\n Example: Any endpoint with the label \\\"app=httpd\\\" can not accept incoming connections on port 80/tcp.\",\n      \"items\": {\n       \"description\": \"PortDenyRule is a list of ports/protocol that should be used for deny policies. This structure lacks the L7Rules since it's not supported in deny policies.\",\n       \"properties\": {\n        \"ports\": {\n         \"description\": \"Ports is a list of L4 port/protocol\",\n         \"items\": {\n          \"description\": \"PortProtocol specifies an L4 port with an optional transport protocol\",\n          \"properties\": {\n           \"port\": {\n            \"description\": \"Port is an L4 port number. For now the string will be strictly parsed as a single uint16. In the future, this field may support ranges in the form \\\"1024-2048 Port can also be a port name, which must contain at least one [a-z], and may also contain [0-9] and '-' anywhere except adjacent to another '-' or in the beginning or the end.\",\n            \"pattern\": \"^(6553[0-5]|655[0-2][0-9]|65[0-4][0-9]{2}|6[0-4][0-9]{3}|[1-5][0-9]{4}|[0-9]{1,4})|([a-zA-Z0-9]-?)*[a-zA-Z](-?[a-zA-Z0-9])*$\",\n            \"type\": \"string\"\n           },\n           \"protocol\": {\n            \"description\": \"Protocol is the L4 protocol. If omitted or empty, any protocol matches. Accepted values: \\\"TCP\\\", \\\"UDP\\\", \\\"SCTP\\\", \\\"ANY\\\" \\n Matching on ICMP is not supported. \\n Named port specified for a container may narrow this down, but may not contradict this.\",\n            \"enum\": [\n             \"TCP\",\n             \"UDP\",\n             \"SCTP\",\n             \"ANY\"\n            ],\n            \"type\": \"string\"\n           }\n          },\n          \"required\": [\n           \"port\"\n          ],\n          \"type\": \"object\"\n         },\n         \"type\": \"array\"\n        }\n       },\n       \"type\": \"object\"\n      },\n      \"type\": \"array\"\n     }\n    },\n    \"type\": \"object\"\n   },\n   \"type\": \"array\"\n  },\n  \"labels\": {\n   \"description\": \"Labels is a list of optional strings which can be used to re-identify the rule or to store metadata. It is possible to lookup or delete strings based on labels. Labels are not required to be unique, multiple rules can have overlapping or identical labels.\",\n   \"items\": {\n    \"description\": \"Label is the Cilium's representation of a container label.\",\n    \"properties\": {\n     \"key\": {\n      \"type\": \"string\"\n     },\n     \"source\": {\n      \"description\": \"Source can be one of the above values (e.g.: LabelSourceContainer).\",\n      \"type\": \"string\"\n     },\n     \"value\": {\n      \"type\": \"string\"\n     }\n    },\n    \"required\": [\n     \"key\"\n    ],\n    \"type\": \"object\"\n   },\n   \"type\": \"array\"\n  },\n  \"nodeSelector\": {\n   \"description\": \"NodeSelector selects all nodes which should be subject to this rule. EndpointSelector and NodeSelector cannot be both empty and are mutually exclusive. Can only be used in CiliumClusterwideNetworkPolicies.\",\n   \"properties\": {\n    \"matchExpressions\": {\n     \"description\": \"matchExpressions is a list of label selector requirements. The requirements are ANDed.\",\n     \"items\": {\n      \"description\": \"A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.\",\n      \"properties\": {\n       \"key\": {\n        \"description\": \"key is the label key that the selector applies to.\",\n        \"type\": \"string\"\n       },\n       \"operator\": {\n        \"description\": \"operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.\",\n        \"enum\": [\n         \"In\",\n         \"NotIn\",\n         \"Exists\",\n         \"DoesNotExist\"\n        ],\n        \"type\": \"string\"\n       },\n       \"values\": {\n        \"description\": \"values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.\",\n        \"items\": {\n         \"type\": \"string\"\n        },\n        \"type\": \"array\"\n       }\n      },\n      \"required\": [\n       \"key\",\n       \"operator\"\n      ],\n      \"type\": \"object\"\n     },\n     \"type\": \"array\"\n    },\n    \"matchLabels\": {\n     \"additionalProperties\": {\n      \"description\": \"MatchLabelsValue represents the value from the MatchLabels {key,value} pair.\",\n      \"maxLength\": 63,\n      \"pattern\": \"^(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])?$\",\n      \"type\": \"string\"\n     },\n     \"description\": \"matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is \\\"key\\\", the operator is \\\"In\\\", and the values array contains only \\\"value\\\". The requirements are ANDed.\",\n     \"type\": \"object\"\n    }\n   },\n   \"type\": \"object\"\n  }\n },\n \"title\": \"Cilium Network Policy\",\n \"type\": \"object\"\n}"}